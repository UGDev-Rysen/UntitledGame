.TH "init" 3 "Sun Aug 23 2015" "Version v0.0.3" "UntitledEngine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
init \- Initialization, version and errors
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBError codes\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBvoid\fP(* \fBGLFWerrorfun\fP) (\fBint\fP, const char *)"
.br
.RI "\fIThe function signature for error callbacks\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBGLFWAPI\fP \fBint\fP \fBglfwInit\fP (\fBvoid\fP)"
.br
.RI "\fIInitializes the GLFW library\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBvoid\fP \fBglfwTerminate\fP (\fBvoid\fP)"
.br
.RI "\fITerminates the GLFW library\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBvoid\fP \fBglfwGetVersion\fP (\fBint\fP *major, \fBint\fP *minor, \fBint\fP *rev)"
.br
.RI "\fIRetrieves the version of the GLFW library\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP const char * \fBglfwGetVersionString\fP (\fBvoid\fP)"
.br
.RI "\fIReturns a string describing the compile-time configuration\&. \fP"
.ti -1c
.RI "\fBGLFWAPI\fP \fBGLFWerrorfun\fP \fBglfwSetErrorCallback\fP (\fBGLFWerrorfun\fP cbfun)"
.br
.RI "\fISets the error callback\&. \fP"
.in -1c
.SS "GLFW version macros"

.in +1c
.ti -1c
.RI "#define \fBGLFW_VERSION_MAJOR\fP   3"
.br
.RI "\fIThe major version number of the GLFW library\&. \fP"
.ti -1c
.RI "#define \fBGLFW_VERSION_MINOR\fP   1"
.br
.RI "\fIThe minor version number of the GLFW library\&. \fP"
.ti -1c
.RI "#define \fBGLFW_VERSION_REVISION\fP   1"
.br
.RI "\fIThe revision number of the GLFW library\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This is the reference documentation for initialization and termination of the library, version management and error handling\&. For more information, see the \fBintro\fP\&. 
.SH "Macro Definition Documentation"
.PP 
.SS "#define GLFW_VERSION_MAJOR   3"

.PP
The major version number of the GLFW library\&. This is incremented when the API is changed in non-compatible ways\&. 
.PP
Definition at line 200 of file glfw3\&.h\&.
.SS "#define GLFW_VERSION_MINOR   1"

.PP
The minor version number of the GLFW library\&. This is incremented when features are added to the API but it remains backward-compatible\&. 
.PP
Definition at line 207 of file glfw3\&.h\&.
.SS "#define GLFW_VERSION_REVISION   1"

.PP
The revision number of the GLFW library\&. This is incremented when a bug fix release is made that does not contain any API changes\&. 
.PP
Definition at line 214 of file glfw3\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBvoid\fP(*  GLFWerrorfun) (\fBint\fP, const char *)"

.PP
The function signature for error callbacks\&. This is the function signature for error callback functions\&.
.PP
\fBParameters:\fP
.RS 4
\fIerror\fP An \fBerror code\fP\&. 
.br
\fIdescription\fP A UTF-8 encoded string describing the error\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBglfwSetErrorCallback\fP 
.RE
.PP

.PP
Definition at line 743 of file glfw3\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBGLFWAPI\fP \fBvoid\fP glfwGetVersion (\fBint\fP * major, \fBint\fP * minor, \fBint\fP * rev)"

.PP
Retrieves the version of the GLFW library\&. This function retrieves the major, minor and revision numbers of the GLFW library\&. It is intended for when you are using GLFW as a shared library and want to ensure that you are using the minimum required version\&.
.PP
Any or all of the version arguments may be \fCNULL\fP\&. This function always succeeds\&.
.PP
\fBParameters:\fP
.RS 4
\fImajor\fP Where to store the major version number, or \fCNULL\fP\&. 
.br
\fIminor\fP Where to store the minor version number, or \fCNULL\fP\&. 
.br
\fIrev\fP Where to store the revision number, or \fCNULL\fP\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called before \fBglfwInit\fP\&.
.RE
.PP
\fBThread Safety\fP
.RS 4
This function may be called from any thread\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBintro_version\fP 
.PP
\fBglfwGetVersionString\fP
.RE
.PP
\fBSince:\fP
.RS 4
Added in GLFW 1\&.0\&. 
.RE
.PP

.SS "\fBGLFWAPI\fP const char* glfwGetVersionString (\fBvoid\fP)"

.PP
Returns a string describing the compile-time configuration\&. This function returns the compile-time generated \fBversion string\fP of the GLFW library binary\&. It describes the version, platform, compiler and any platform-specific compile-time options\&.
.PP
\fBDo not use the version string\fP to parse the GLFW library version\&. The \fBglfwGetVersion\fP function already provides the version of the running library binary\&.
.PP
This function always succeeds\&.
.PP
\fBReturns:\fP
.RS 4
The GLFW version string\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called before \fBglfwInit\fP\&.
.RE
.PP
\fBPointer Lifetime\fP
.RS 4
The returned string is static and compile-time generated\&.
.RE
.PP
\fBThread Safety\fP
.RS 4
This function may be called from any thread\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBintro_version\fP 
.PP
\fBglfwGetVersion\fP
.RE
.PP
\fBSince:\fP
.RS 4
Added in GLFW 3\&.0\&. 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBint\fP glfwInit (\fBvoid\fP)"

.PP
Initializes the GLFW library\&. This function initializes the GLFW library\&. Before most GLFW functions can be used, GLFW must be initialized, and before an application terminates GLFW should be terminated in order to free any resources allocated during or after initialization\&.
.PP
If this function fails, it calls \fBglfwTerminate\fP before returning\&. If it succeeds, you should call \fBglfwTerminate\fP before the application exits\&.
.PP
Additional calls to this function after successful initialization but before termination will return \fCGL_TRUE\fP immediately\&.
.PP
\fBReturns:\fP
.RS 4
\fCGL_TRUE\fP if successful, or \fCGL_FALSE\fP if an \fBerror\fP occurred\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
\fBOS X:\fP This function will change the current directory of the application to the \fCContents/Resources\fP subdirectory of the application's bundle, if present\&. This can be disabled with a \fBcompile-time option\fP\&.
.PP
\fBX11:\fP If the \fCLC_CTYPE\fP category of the current locale is set to \fC'C'\fP then the environment's locale will be applied to that category\&. This is done because character input will not function when \fCLC_CTYPE\fP is set to \fC'C'\fP\&. If another locale was set before this function was called, it will be left untouched\&.
.RE
.PP
\fBThread Safety\fP
.RS 4
This function may only be called from the main thread\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBintro_init\fP 
.PP
\fBglfwTerminate\fP
.RE
.PP
\fBSince:\fP
.RS 4
Added in GLFW 1\&.0\&. 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBGLFWerrorfun\fP glfwSetErrorCallback (\fBGLFWerrorfun\fP cbfun)"

.PP
Sets the error callback\&. This function sets the error callback, which is called with an error code and a human-readable description each time a GLFW error occurs\&.
.PP
The error callback is called on the thread where the error occurred\&. If you are using GLFW from multiple threads, your error callback needs to be written accordingly\&.
.PP
Because the description string may have been generated specifically for that error, it is not guaranteed to be valid after the callback has returned\&. If you wish to use it after the callback returns, you need to make a copy\&.
.PP
Once set, the error callback remains set even after the library has been terminated\&.
.PP
\fBParameters:\fP
.RS 4
\fIcbfun\fP The new callback, or \fCNULL\fP to remove the currently set callback\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The previously set callback, or \fCNULL\fP if no callback was set\&.
.RE
.PP
\fBRemarks:\fP
.RS 4
This function may be called before \fBglfwInit\fP\&.
.RE
.PP
\fBThread Safety\fP
.RS 4
This function may only be called from the main thread\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBerror_handling\fP
.RE
.PP
\fBSince:\fP
.RS 4
Added in GLFW 3\&.0\&. 
.RE
.PP

.SS "\fBGLFWAPI\fP \fBvoid\fP glfwTerminate (\fBvoid\fP)"

.PP
Terminates the GLFW library\&. This function destroys all remaining windows and cursors, restores any modified gamma ramps and frees any other allocated resources\&. Once this function is called, you must again call \fBglfwInit\fP successfully before you will be able to use most GLFW functions\&.
.PP
If GLFW has been successfully initialized, this function should be called before the application exits\&. If initialization fails, there is no need to call this function, as it is called by \fBglfwInit\fP before it returns failure\&.
.PP
\fBRemarks:\fP
.RS 4
This function may be called before \fBglfwInit\fP\&.
.RE
.PP
\fBWarning:\fP
.RS 4
No window's context may be current on another thread when this function is called\&.
.RE
.PP
\fBReentrancy\fP
.RS 4
This function may not be called from a callback\&.
.RE
.PP
\fBThread Safety\fP
.RS 4
This function may only be called from the main thread\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBintro_init\fP 
.PP
\fBglfwInit\fP
.RE
.PP
\fBSince:\fP
.RS 4
Added in GLFW 1\&.0\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for UntitledEngine from the source code\&.

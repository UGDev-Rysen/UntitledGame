<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="glfw3_8h" kind="file" language="C++">
    <compoundname>glfw3.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">GL/gl.h</includes>
    <includedby refid="window_8h" local="no">G:/Libraries/VSProjects/UntitledEngine/Engine-Core/src/graphics/window.h</includedby>
    <includedby refid="main_8cpp" local="no">G:/Libraries/VSProjects/UntitledEngine/Engine-Core/main.cpp</includedby>
    <includedby refid="window_8cpp" local="no">G:/Libraries/VSProjects/UntitledEngine/Engine-Core/src/graphics/window.cpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h</label>
        <link refid="glfw3.h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>GL/gl.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>G:/Libraries/VSProjects/UntitledEngine/Engine-Core/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="12">
        <label>G:/Libraries/VSProjects/UntitledEngine/Engine-Core/src/graphics/window.h</label>
        <link refid="window_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h</label>
        <link refid="glfw3.h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>G:/Libraries/VSProjects/UntitledEngine/Engine-Core/src/graphics/window.cpp</label>
        <link refid="window_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_g_l_f_wvidmode" prot="public">GLFWvidmode</innerclass>
    <innerclass refid="struct_g_l_f_wgammaramp" prot="public">GLFWgammaramp</innerclass>
    <innerclass refid="struct_g_l_f_wimage" prot="public">GLFWimage</innerclass>
      <sectiondef kind="user-defined">
      <header>GLFW version macros</header>
      <memberdef kind="define" id="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" prot="public" static="no">
        <name>GLFW_VERSION_MAJOR</name>
        <initializer>3</initializer>
        <briefdescription>
<para>The major version number of the GLFW library. </para>        </briefdescription>
        <detaileddescription>
<para>This is incremented when the API is changed in non-compatible ways. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="200" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" prot="public" static="no">
        <name>GLFW_VERSION_MINOR</name>
        <initializer>1</initializer>
        <briefdescription>
<para>The minor version number of the GLFW library. </para>        </briefdescription>
        <detaileddescription>
<para>This is incremented when features are added to the API but it remains backward-compatible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="207" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__init_1gab72ae2e2035d9ea461abc3495eac0502" prot="public" static="no">
        <name>GLFW_VERSION_REVISION</name>
        <initializer>1</initializer>
        <briefdescription>
<para>The revision number of the GLFW library. </para>        </briefdescription>
        <detaileddescription>
<para>This is incremented when a bug fix release is made that does not contain any API changes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="214" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Key and button actions</header>
      <memberdef kind="define" id="group__input_1gada11d965c4da13090ad336e030e4d11f" prot="public" static="no">
        <name>GLFW_RELEASE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>The key or mouse button was released. </para>        </briefdescription>
        <detaileddescription>
<para>The key or mouse button was released. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="225" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__input_1ga2485743d0b59df3791c45951c4195265" prot="public" static="no">
        <name>GLFW_PRESS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>The key or mouse button was pressed. </para>        </briefdescription>
        <detaileddescription>
<para>The key or mouse button was pressed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="232" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__input_1gac96fd3b9fc66c6f0eebaf6532595338f" prot="public" static="no">
        <name>GLFW_REPEAT</name>
        <initializer>2</initializer>
        <briefdescription>
<para>The key was held down until it repeated. </para>        </briefdescription>
        <detaileddescription>
<para>The key was held down until it repeated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="239" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="glfw3_8h_1a428a91acf2c2439dc1a257708ee1f805" prot="public" static="no">
        <name>APIENTRY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="87" column="13" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" prot="public" static="no">
        <name>GLFWAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="185" column="10" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga99aacc875b6b27a072552631e13775c7" prot="public" static="no">
        <name>GLFW_KEY_UNKNOWN</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="266" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaddb2c23772b97fd7e26e8ee66f1ad014" prot="public" static="no">
        <name>GLFW_KEY_SPACE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="269" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6059b0b048ba6980b6107fffbd3b4b24" prot="public" static="no">
        <name>GLFW_KEY_APOSTROPHE</name>
        <initializer>39  /* &apos; */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="270" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab3d5d72e59d3055f494627b0a524926c" prot="public" static="no">
        <name>GLFW_KEY_COMMA</name>
        <initializer>44  /* , */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="271" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac556b360f7f6fca4b70ba0aecf313fd4" prot="public" static="no">
        <name>GLFW_KEY_MINUS</name>
        <initializer>45  /* - */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="272" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga37e296b650eab419fc474ff69033d927" prot="public" static="no">
        <name>GLFW_KEY_PERIOD</name>
        <initializer>46  /* . */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="273" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadf3d753b2d479148d711de34b83fd0db" prot="public" static="no">
        <name>GLFW_KEY_SLASH</name>
        <initializer>47  /* / */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="274" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga50391730e9d7112ad4fd42d0bd1597c1" prot="public" static="no">
        <name>GLFW_KEY_0</name>
        <initializer>48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="275" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga05e4cae9ddb8d40cf6d82c8f11f2502f" prot="public" static="no">
        <name>GLFW_KEY_1</name>
        <initializer>49</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="276" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadc8e66b3a4c4b5c39ad1305cf852863c" prot="public" static="no">
        <name>GLFW_KEY_2</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="277" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga812f0273fe1a981e1fa002ae73e92271" prot="public" static="no">
        <name>GLFW_KEY_3</name>
        <initializer>51</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="278" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9e14b6975a9cc8f66cdd5cb3d3861356" prot="public" static="no">
        <name>GLFW_KEY_4</name>
        <initializer>52</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="279" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4d74ddaa5d4c609993b4d4a15736c924" prot="public" static="no">
        <name>GLFW_KEY_5</name>
        <initializer>53</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="280" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9ea4ab80c313a227b14d0a7c6f810b5d" prot="public" static="no">
        <name>GLFW_KEY_6</name>
        <initializer>54</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="281" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab79b1cfae7bd630cfc4604c1f263c666" prot="public" static="no">
        <name>GLFW_KEY_7</name>
        <initializer>55</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="282" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadeaa109a0f9f5afc94fe4a108e686f6f" prot="public" static="no">
        <name>GLFW_KEY_8</name>
        <initializer>56</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="283" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga2924cb5349ebbf97c8987f3521c44f39" prot="public" static="no">
        <name>GLFW_KEY_9</name>
        <initializer>57</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="284" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga84233de9ee5bb3e8788a5aa07d80af7d" prot="public" static="no">
        <name>GLFW_KEY_SEMICOLON</name>
        <initializer>59  /* ; */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="285" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae1a2de47240d6664423c204bdd91bd17" prot="public" static="no">
        <name>GLFW_KEY_EQUAL</name>
        <initializer>61  /* = */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="286" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga03e842608e1ea323370889d33b8f70ff" prot="public" static="no">
        <name>GLFW_KEY_A</name>
        <initializer>65</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="287" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8e3fb647ff3aca9e8dbf14fe66332941" prot="public" static="no">
        <name>GLFW_KEY_B</name>
        <initializer>66</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="288" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga00ccf3475d9ee2e679480d540d554669" prot="public" static="no">
        <name>GLFW_KEY_C</name>
        <initializer>67</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="289" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga011f7cdc9a654da984a2506479606933" prot="public" static="no">
        <name>GLFW_KEY_D</name>
        <initializer>68</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="290" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gabf48fcc3afbe69349df432b470c96ef2" prot="public" static="no">
        <name>GLFW_KEY_E</name>
        <initializer>69</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="291" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga5df402e02aca08444240058fd9b42a55" prot="public" static="no">
        <name>GLFW_KEY_F</name>
        <initializer>70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="292" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae74ecddf7cc96104ab23989b1cdab536" prot="public" static="no">
        <name>GLFW_KEY_G</name>
        <initializer>71</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="293" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad4cc98fc8f35f015d9e2fb94bf136076" prot="public" static="no">
        <name>GLFW_KEY_H</name>
        <initializer>72</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="294" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga274655c8bfe39742684ca393cf8ed093" prot="public" static="no">
        <name>GLFW_KEY_I</name>
        <initializer>73</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="295" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga65ff2aedb129a3149ad9cb3e4159a75f" prot="public" static="no">
        <name>GLFW_KEY_J</name>
        <initializer>74</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="296" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4ae8debadf6d2a691badae0b53ea3ba0" prot="public" static="no">
        <name>GLFW_KEY_K</name>
        <initializer>75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="297" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaaa8b54a13f6b1eed85ac86f82d550db2" prot="public" static="no">
        <name>GLFW_KEY_L</name>
        <initializer>76</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="298" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4d7f0260c82e4ea3d6ebc7a21d6e3716" prot="public" static="no">
        <name>GLFW_KEY_M</name>
        <initializer>77</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="299" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae00856dfeb5d13aafebf59d44de5cdda" prot="public" static="no">
        <name>GLFW_KEY_N</name>
        <initializer>78</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="300" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaecbbb79130df419d58dd7f09a169efe9" prot="public" static="no">
        <name>GLFW_KEY_O</name>
        <initializer>79</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="301" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8fc15819c1094fb2afa01d84546b33e1" prot="public" static="no">
        <name>GLFW_KEY_P</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="302" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafdd01e38b120d67cf51e348bb47f3964" prot="public" static="no">
        <name>GLFW_KEY_Q</name>
        <initializer>81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="303" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4ce6c70a0c98c50b3fe4ab9a728d4d36" prot="public" static="no">
        <name>GLFW_KEY_R</name>
        <initializer>82</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="304" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga1570e2ccaab036ea82bed66fc1dab2a9" prot="public" static="no">
        <name>GLFW_KEY_S</name>
        <initializer>83</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="305" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga90e0560422ec7a30e7f3f375bc9f37f9" prot="public" static="no">
        <name>GLFW_KEY_T</name>
        <initializer>84</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="306" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gacad52f3bf7d378fc0ffa72a76769256d" prot="public" static="no">
        <name>GLFW_KEY_U</name>
        <initializer>85</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="307" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga22c7763899ecf7788862e5f90eacce6b" prot="public" static="no">
        <name>GLFW_KEY_V</name>
        <initializer>86</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="308" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa06a712e6202661fc03da5bdb7b6e545" prot="public" static="no">
        <name>GLFW_KEY_W</name>
        <initializer>87</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="309" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac1c42c0bf4192cea713c55598b06b744" prot="public" static="no">
        <name>GLFW_KEY_X</name>
        <initializer>88</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="310" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafd9f115a549effdf8e372a787c360313" prot="public" static="no">
        <name>GLFW_KEY_Y</name>
        <initializer>89</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="311" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac489e208c26afda8d4938ed88718760a" prot="public" static="no">
        <name>GLFW_KEY_Z</name>
        <initializer>90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="312" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad1c8d9adac53925276ecb1d592511d8a" prot="public" static="no">
        <name>GLFW_KEY_LEFT_BRACKET</name>
        <initializer>91  /* [ */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="313" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab8155ea99d1ab27ff56f24f8dc73f8d1" prot="public" static="no">
        <name>GLFW_KEY_BACKSLASH</name>
        <initializer>92  /* \ */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="314" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga86ef225fd6a66404caae71044cdd58d8" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_BRACKET</name>
        <initializer>93  /* ] */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="315" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7a3701fb4e2a0b136ff4b568c3c8d668" prot="public" static="no">
        <name>GLFW_KEY_GRAVE_ACCENT</name>
        <initializer>96  /* ` */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="316" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadc78dad3dab76bcd4b5c20114052577a" prot="public" static="no">
        <name>GLFW_KEY_WORLD_1</name>
        <initializer>161 /* non-US #1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="317" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga20494bfebf0bb4fc9503afca18ab2c5e" prot="public" static="no">
        <name>GLFW_KEY_WORLD_2</name>
        <initializer>162 /* non-US #2 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="318" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaac6596c350b635c245113b81c2123b93" prot="public" static="no">
        <name>GLFW_KEY_ESCAPE</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="321" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9555a92ecbecdbc1f3435219c571d667" prot="public" static="no">
        <name>GLFW_KEY_ENTER</name>
        <initializer>257</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="322" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6908a4bda9950a3e2b73f794bbe985df" prot="public" static="no">
        <name>GLFW_KEY_TAB</name>
        <initializer>258</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="323" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6c0df1fe2f156bbd5a98c66d76ff3635" prot="public" static="no">
        <name>GLFW_KEY_BACKSPACE</name>
        <initializer>259</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="324" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga373ac7365435d6b0eb1068f470e34f47" prot="public" static="no">
        <name>GLFW_KEY_INSERT</name>
        <initializer>260</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="325" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gadb111e4df74b8a715f2c05dad58d2682" prot="public" static="no">
        <name>GLFW_KEY_DELETE</name>
        <initializer>261</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="326" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga06ba07662e8c291a4a84535379ffc7ac" prot="public" static="no">
        <name>GLFW_KEY_RIGHT</name>
        <initializer>262</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="327" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae12a010d33c309a67ab9460c51eb2462" prot="public" static="no">
        <name>GLFW_KEY_LEFT</name>
        <initializer>263</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="328" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae2e3958c71595607416aa7bf082be2f9" prot="public" static="no">
        <name>GLFW_KEY_DOWN</name>
        <initializer>264</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="329" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga2f3342b194020d3544c67e3506b6f144" prot="public" static="no">
        <name>GLFW_KEY_UP</name>
        <initializer>265</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="330" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga3ab731f9622f0db280178a5f3cc6d586" prot="public" static="no">
        <name>GLFW_KEY_PAGE_UP</name>
        <initializer>266</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="331" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaee0a8fa442001cc2147812f84b59041c" prot="public" static="no">
        <name>GLFW_KEY_PAGE_DOWN</name>
        <initializer>267</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="332" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga41452c7287195d481e43207318c126a7" prot="public" static="no">
        <name>GLFW_KEY_HOME</name>
        <initializer>268</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="333" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga86587ea1df19a65978d3e3b8439bedd9" prot="public" static="no">
        <name>GLFW_KEY_END</name>
        <initializer>269</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="334" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga92c1d2c9d63485f3d70f94f688d48672" prot="public" static="no">
        <name>GLFW_KEY_CAPS_LOCK</name>
        <initializer>280</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="335" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf622b63b9537f7084c2ab649b8365630" prot="public" static="no">
        <name>GLFW_KEY_SCROLL_LOCK</name>
        <initializer>281</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="336" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga3946edc362aeff213b2be6304296cf43" prot="public" static="no">
        <name>GLFW_KEY_NUM_LOCK</name>
        <initializer>282</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="337" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf964c2e65e97d0cf785a5636ee8df642" prot="public" static="no">
        <name>GLFW_KEY_PRINT_SCREEN</name>
        <initializer>283</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="338" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8116b9692d87382afb5849b6d8907f18" prot="public" static="no">
        <name>GLFW_KEY_PAUSE</name>
        <initializer>284</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="339" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafb8d66c573acf22e364049477dcbea30" prot="public" static="no">
        <name>GLFW_KEY_F1</name>
        <initializer>290</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="340" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga0900750aff94889b940f5e428c07daee" prot="public" static="no">
        <name>GLFW_KEY_F2</name>
        <initializer>291</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="341" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaed7cd729c0147a551bb8b7bb36c17015" prot="public" static="no">
        <name>GLFW_KEY_F3</name>
        <initializer>292</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="342" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9b61ebd0c63b44b7332fda2c9763eaa6" prot="public" static="no">
        <name>GLFW_KEY_F4</name>
        <initializer>293</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="343" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf258dda9947daa428377938ed577c8c2" prot="public" static="no">
        <name>GLFW_KEY_F5</name>
        <initializer>294</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="344" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga6dc2d3f87b9d51ffbbbe2ef0299d8e1d" prot="public" static="no">
        <name>GLFW_KEY_F6</name>
        <initializer>295</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="345" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gacca6ef8a2162c52a0ac1d881e8d9c38a" prot="public" static="no">
        <name>GLFW_KEY_F7</name>
        <initializer>296</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="346" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gac9d39390336ae14e4a93e295de43c7e8" prot="public" static="no">
        <name>GLFW_KEY_F8</name>
        <initializer>297</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="347" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gae40de0de1c9f21cd26c9afa3d7050851" prot="public" static="no">
        <name>GLFW_KEY_F9</name>
        <initializer>298</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="348" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga718d11d2f7d57471a2f6a894235995b1" prot="public" static="no">
        <name>GLFW_KEY_F10</name>
        <initializer>299</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="349" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga0bc04b11627e7d69339151e7306b2832" prot="public" static="no">
        <name>GLFW_KEY_F11</name>
        <initializer>300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="350" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf5908fa9b0a906ae03fc2c61ac7aa3e2" prot="public" static="no">
        <name>GLFW_KEY_F12</name>
        <initializer>301</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="351" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad637f4308655e1001bd6ad942bc0fd4b" prot="public" static="no">
        <name>GLFW_KEY_F13</name>
        <initializer>302</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="352" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf14c66cff3396e5bd46e803c035e6c1f" prot="public" static="no">
        <name>GLFW_KEY_F14</name>
        <initializer>303</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="353" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7f70970db6e8be1794da8516a6d14058" prot="public" static="no">
        <name>GLFW_KEY_F15</name>
        <initializer>304</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="354" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa582dbb1d2ba2050aa1dca0838095b27" prot="public" static="no">
        <name>GLFW_KEY_F16</name>
        <initializer>305</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="355" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga972ce5c365e2394b36104b0e3125c748" prot="public" static="no">
        <name>GLFW_KEY_F17</name>
        <initializer>306</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="356" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaebf6391058d5566601e357edc5ea737c" prot="public" static="no">
        <name>GLFW_KEY_F18</name>
        <initializer>307</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="357" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaec011d9ba044058cb54529da710e9791" prot="public" static="no">
        <name>GLFW_KEY_F19</name>
        <initializer>308</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="358" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga82b9c721ada04cd5ca8de767da38022f" prot="public" static="no">
        <name>GLFW_KEY_F20</name>
        <initializer>309</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="359" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga356afb14d3440ff2bb378f74f7ebc60f" prot="public" static="no">
        <name>GLFW_KEY_F21</name>
        <initializer>310</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="360" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga90960bd2a155f2b09675324d3dff1565" prot="public" static="no">
        <name>GLFW_KEY_F22</name>
        <initializer>311</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="361" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga43c21099aac10952d1be909a8ddee4d5" prot="public" static="no">
        <name>GLFW_KEY_F23</name>
        <initializer>312</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="362" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8150374677b5bed3043408732152dea2" prot="public" static="no">
        <name>GLFW_KEY_F24</name>
        <initializer>313</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="363" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa4bbd93ed73bb4c6ae7d83df880b7199" prot="public" static="no">
        <name>GLFW_KEY_F25</name>
        <initializer>314</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="364" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga10515dafc55b71e7683f5b4fedd1c70d" prot="public" static="no">
        <name>GLFW_KEY_KP_0</name>
        <initializer>320</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="365" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf3a29a334402c5eaf0b3439edf5587c3" prot="public" static="no">
        <name>GLFW_KEY_KP_1</name>
        <initializer>321</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="366" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaf82d5a802ab8213c72653d7480c16f13" prot="public" static="no">
        <name>GLFW_KEY_KP_2</name>
        <initializer>322</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="367" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7e25ff30d56cd512828c1d4ae8d54ef2" prot="public" static="no">
        <name>GLFW_KEY_KP_3</name>
        <initializer>323</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="368" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gada7ec86778b85e0b4de0beea72234aea" prot="public" static="no">
        <name>GLFW_KEY_KP_4</name>
        <initializer>324</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="369" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9a5be274434866c51738cafbb6d26b45" prot="public" static="no">
        <name>GLFW_KEY_KP_5</name>
        <initializer>325</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="370" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafc141b0f8450519084c01092a3157faa" prot="public" static="no">
        <name>GLFW_KEY_KP_6</name>
        <initializer>326</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="371" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8882f411f05d04ec77a9563974bbfa53" prot="public" static="no">
        <name>GLFW_KEY_KP_7</name>
        <initializer>327</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="372" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gab2ea2e6a12f89d315045af520ac78cec" prot="public" static="no">
        <name>GLFW_KEY_KP_8</name>
        <initializer>328</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="373" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafb21426b630ed4fcc084868699ba74c1" prot="public" static="no">
        <name>GLFW_KEY_KP_9</name>
        <initializer>329</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="374" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4e231d968796331a9ea0dbfb98d4005b" prot="public" static="no">
        <name>GLFW_KEY_KP_DECIMAL</name>
        <initializer>330</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="375" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gabca1733780a273d549129ad0f250d1e5" prot="public" static="no">
        <name>GLFW_KEY_KP_DIVIDE</name>
        <initializer>331</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="376" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9ada267eb0e78ed2ada8701dd24a56ef" prot="public" static="no">
        <name>GLFW_KEY_KP_MULTIPLY</name>
        <initializer>332</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="377" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaa3dbd60782ff93d6082a124bce1fa236" prot="public" static="no">
        <name>GLFW_KEY_KP_SUBTRACT</name>
        <initializer>333</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="378" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad09c7c98acc79e89aa6a0a91275becac" prot="public" static="no">
        <name>GLFW_KEY_KP_ADD</name>
        <initializer>334</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="379" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga4f728f8738f2986bd63eedd3d412e8cf" prot="public" static="no">
        <name>GLFW_KEY_KP_ENTER</name>
        <initializer>335</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="380" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaebdc76d4a808191e6d21b7e4ad2acd97" prot="public" static="no">
        <name>GLFW_KEY_KP_EQUAL</name>
        <initializer>336</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="381" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga8a530a28a65c44ab5d00b759b756d3f6" prot="public" static="no">
        <name>GLFW_KEY_LEFT_SHIFT</name>
        <initializer>340</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="382" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9f97b743e81460ac4b2deddecd10a464" prot="public" static="no">
        <name>GLFW_KEY_LEFT_CONTROL</name>
        <initializer>341</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="383" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga7f27dabf63a7789daa31e1c96790219b" prot="public" static="no">
        <name>GLFW_KEY_LEFT_ALT</name>
        <initializer>342</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="384" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gafb1207c91997fc295afd1835fbc5641a" prot="public" static="no">
        <name>GLFW_KEY_LEFT_SUPER</name>
        <initializer>343</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="385" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gaffca36b99c9dce1a19cb9befbadce691" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_SHIFT</name>
        <initializer>344</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="386" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad1ca2094b2694e7251d0ab1fd34f8519" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_CONTROL</name>
        <initializer>345</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="387" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga687b38009131cfdd07a8d05fff8fa446" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_ALT</name>
        <initializer>346</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="388" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1gad4547a3e8e247594acb60423fe6502db" prot="public" static="no">
        <name>GLFW_KEY_RIGHT_SUPER</name>
        <initializer>347</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="389" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga9845be48a745fc232045c9ec174d8820" prot="public" static="no">
        <name>GLFW_KEY_MENU</name>
        <initializer>348</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="390" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789" prot="public" static="no">
        <name>GLFW_KEY_LAST</name>
        <initializer><ref refid="group__keys_1ga9845be48a745fc232045c9ec174d8820" kindref="member">GLFW_KEY_MENU</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="391" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1ga14994d3196c290aaa347248e51740274" prot="public" static="no">
        <name>GLFW_MOD_SHIFT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>If this bit is set one or more Shift keys were held down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="404" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1ga6ed94871c3208eefd85713fa929d45aa" prot="public" static="no">
        <name>GLFW_MOD_CONTROL</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>If this bit is set one or more Control keys were held down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="407" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1gad2acd5633463c29e07008687ea73c0f4" prot="public" static="no">
        <name>GLFW_MOD_ALT</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>If this bit is set one or more Alt keys were held down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="410" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mods_1ga6b64ba10ea0227cf6f42efd0a220aba1" prot="public" static="no">
        <name>GLFW_MOD_SUPER</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>If this bit is set one or more Super keys were held down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="413" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga181a6e875251fd8671654eff00f9112e" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_1</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="423" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga604b39b92c88ce9bd332e97fc3f4156c" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_2</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="424" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga0130d505563d0236a6f85545f19e1721" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_3</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="425" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga53f4097bb01d5521c7d9513418c91ca9" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_4</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="426" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gaf08c4ddecb051d3d9667db1d5e417c9c" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_5</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="427" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gae8513e06aab8aa393b595f22c6d8257a" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_6</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="428" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga8b02a1ab55dde45b3a3883d54ffd7dc7" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_7</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="429" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga35d5c4263e0dc0d0a4731ca6c562f32c" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_8</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="430" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gab1fd86a4518a9141ec7bcde2e15a2fdf" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_LAST</name>
        <initializer><ref refid="group__buttons_1ga35d5c4263e0dc0d0a4731ca6c562f32c" kindref="member">GLFW_MOUSE_BUTTON_8</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="431" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1gaf37100431dcd5082d48f95ee8bc8cd56" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_LEFT</name>
        <initializer><ref refid="group__buttons_1ga181a6e875251fd8671654eff00f9112e" kindref="member">GLFW_MOUSE_BUTTON_1</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="432" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga3e2f2cf3c4942df73cc094247d275e74" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_RIGHT</name>
        <initializer><ref refid="group__buttons_1ga604b39b92c88ce9bd332e97fc3f4156c" kindref="member">GLFW_MOUSE_BUTTON_2</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="433" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__buttons_1ga34a4d2a701434f763fd93a2ff842b95a" prot="public" static="no">
        <name>GLFW_MOUSE_BUTTON_MIDDLE</name>
        <initializer><ref refid="group__buttons_1ga0130d505563d0236a6f85545f19e1721" kindref="member">GLFW_MOUSE_BUTTON_3</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="434" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga34a0443d059e9f22272cd4669073f73d" prot="public" static="no">
        <name>GLFW_JOYSTICK_1</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="443" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga6eab65ec88e65e0850ef8413504cb50c" prot="public" static="no">
        <name>GLFW_JOYSTICK_2</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="444" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gae6f3eedfeb42424c2f5e3161efb0b654" prot="public" static="no">
        <name>GLFW_JOYSTICK_3</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="445" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga97ddbcad02b7f48d74fad4ddb08fff59" prot="public" static="no">
        <name>GLFW_JOYSTICK_4</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="446" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gae43281bc66d3fa5089fb50c3e7a28695" prot="public" static="no">
        <name>GLFW_JOYSTICK_5</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="447" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga74771620aa53bd68a487186dea66fd77" prot="public" static="no">
        <name>GLFW_JOYSTICK_6</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="448" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga20a9f4f3aaefed9ea5e66072fc588b87" prot="public" static="no">
        <name>GLFW_JOYSTICK_7</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="449" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga21a934c940bcf25db0e4c8fe9b364bdb" prot="public" static="no">
        <name>GLFW_JOYSTICK_8</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="450" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga87689d47df0ba6f9f5fcbbcaf7b3cecf" prot="public" static="no">
        <name>GLFW_JOYSTICK_9</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="451" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gaef55389ee605d6dfc31aef6fe98c54ec" prot="public" static="no">
        <name>GLFW_JOYSTICK_10</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="452" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gae7d26e3df447c2c14a569fcc18516af4" prot="public" static="no">
        <name>GLFW_JOYSTICK_11</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="453" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1gab91bbf5b7ca6be8d3ac5c4d89ff48ac7" prot="public" static="no">
        <name>GLFW_JOYSTICK_12</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="454" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga5c84fb4e49bf661d7d7c78eb4018c508" prot="public" static="no">
        <name>GLFW_JOYSTICK_13</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="455" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga89540873278ae5a42b3e70d64164dc74" prot="public" static="no">
        <name>GLFW_JOYSTICK_14</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="456" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga7b02ab70daf7a78bcc942d5d4cc1dcf9" prot="public" static="no">
        <name>GLFW_JOYSTICK_15</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="457" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga453edeeabf350827646b6857df4f80ce" prot="public" static="no">
        <name>GLFW_JOYSTICK_16</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="458" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__joysticks_1ga9ca13ebf24c331dd98df17d84a4b72c9" prot="public" static="no">
        <name>GLFW_JOYSTICK_LAST</name>
        <initializer><ref refid="group__joysticks_1ga453edeeabf350827646b6857df4f80ce" kindref="member">GLFW_JOYSTICK_16</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="459" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" prot="public" static="no">
        <name>GLFW_NOT_INITIALIZED</name>
        <initializer>0x00010001</initializer>
        <briefdescription>
<para>GLFW has not been initialized. </para>        </briefdescription>
        <detaileddescription>
<para>This occurs if a GLFW function was called that may not be called unless the library is initialized.</para><para><simplesect kind="par"><title>Analysis</title><para>Application programmer error. Initialize GLFW before calling any function that requires initialization. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="477" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" prot="public" static="no">
        <name>GLFW_NO_CURRENT_CONTEXT</name>
        <initializer>0x00010002</initializer>
        <briefdescription>
<para>No context is current for this thread. </para>        </briefdescription>
        <detaileddescription>
<para>This occurs if a GLFW function was called that needs and operates on the current OpenGL or OpenGL ES context but no context is current on the calling thread. One such function is <ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref>.</para><para><simplesect kind="par"><title>Analysis</title><para>Application programmer error. Ensure a context is current before calling functions that require a current context. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="488" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" prot="public" static="no">
        <name>GLFW_INVALID_ENUM</name>
        <initializer>0x00010003</initializer>
        <briefdescription>
<para>One of the arguments to the function was an invalid enum value. </para>        </briefdescription>
        <detaileddescription>
<para>One of the arguments to the function was an invalid enum value, for example requesting GLFW_RED_BITS with <ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>.</para><para><simplesect kind="par"><title>Analysis</title><para>Application programmer error. Fix the offending call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="498" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" prot="public" static="no">
        <name>GLFW_INVALID_VALUE</name>
        <initializer>0x00010004</initializer>
        <briefdescription>
<para>One of the arguments to the function was an invalid value. </para>        </briefdescription>
        <detaileddescription>
<para>One of the arguments to the function was an invalid value, for example requesting a non-existent OpenGL or OpenGL ES version like 2.7.</para><para>Requesting a valid but unavailable OpenGL or OpenGL ES version will instead result in a <ref refid="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" kindref="member">GLFW_VERSION_UNAVAILABLE</ref> error.</para><para><simplesect kind="par"><title>Analysis</title><para>Application programmer error. Fix the offending call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="510" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga9023953a2bcb98c2906afd071d21ee7f" prot="public" static="no">
        <name>GLFW_OUT_OF_MEMORY</name>
        <initializer>0x00010005</initializer>
        <briefdescription>
<para>A memory allocation failed. </para>        </briefdescription>
        <detaileddescription>
<para>A memory allocation failed.</para><para><simplesect kind="par"><title>Analysis</title><para>A bug in GLFW or the underlying operating system. Report the bug to our <ulink url="https://github.com/glfw/glfw/issues">issue tracker</ulink>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="519" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga56882b290db23261cc6c053c40c2d08e" prot="public" static="no">
        <name>GLFW_API_UNAVAILABLE</name>
        <initializer>0x00010006</initializer>
        <briefdescription>
<para>GLFW could not find support for the requested client API on the system. </para>        </briefdescription>
        <detaileddescription>
<para>GLFW could not find support for the requested client API on the system. If emitted by functions other than <ref refid="group__window_1ga680a02abe0e4494b6759d5703240713e" kindref="member">glfwCreateWindow</ref>, no supported client API was found.</para><para><simplesect kind="par"><title>Analysis</title><para>The installed graphics driver does not support the requested client API, or does not support it via the chosen context creation backend. Below are a few examples.</para></simplesect>
<simplesect kind="par"><title></title><para>Some pre-installed Windows graphics drivers do not support OpenGL. AMD only supports OpenGL ES via EGL, while Nvidia and Intel only supports it via a WGL or GLX extension. OS X does not provide OpenGL ES at all. The Mesa EGL, OpenGL and OpenGL ES libraries do not interface with the Nvidia binary driver. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="539" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" prot="public" static="no">
        <name>GLFW_VERSION_UNAVAILABLE</name>
        <initializer>0x00010007</initializer>
        <briefdescription>
<para>The requested OpenGL or OpenGL ES version is not available. </para>        </briefdescription>
        <detaileddescription>
<para>The requested OpenGL or OpenGL ES version (including any requested context or framebuffer hints) is not available on this machine.</para><para><simplesect kind="par"><title>Analysis</title><para>The machine does not support your requirements. If your application is sufficiently flexible, downgrade your requirements and try again. Otherwise, inform the user that their machine does not match your requirements.</para></simplesect>
<simplesect kind="par"><title></title><para>Future invalid OpenGL and OpenGL ES versions, for example OpenGL 4.8 if 5.0 comes out before the 4.x series gets that far, also fail with this error and not <ref refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" kindref="member">GLFW_INVALID_VALUE</ref>, because GLFW cannot know what future versions will exist. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="557" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" prot="public" static="no">
        <name>GLFW_PLATFORM_ERROR</name>
        <initializer>0x00010008</initializer>
        <briefdescription>
<para>A platform-specific error occurred that does not match any of the more specific categories. </para>        </briefdescription>
        <detaileddescription>
<para>A platform-specific error occurred that does not match any of the more specific categories.</para><para><simplesect kind="par"><title>Analysis</title><para>A bug or configuration error in GLFW, the underlying operating system or its drivers, or a lack of required resources. Report the issue to our <ulink url="https://github.com/glfw/glfw/issues">issue tracker</ulink>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="569" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__errors_1ga196e125ef261d94184e2b55c05762f14" prot="public" static="no">
        <name>GLFW_FORMAT_UNAVAILABLE</name>
        <initializer>0x00010009</initializer>
        <briefdescription>
<para>The requested format is not supported or available. </para>        </briefdescription>
        <detaileddescription>
<para>If emitted during window creation, the requested pixel format is not supported.</para><para>If emitted when querying the clipboard, the contents of the clipboard could not be converted to the requested format.</para><para><simplesect kind="par"><title>Analysis</title><para>If emitted during window creation, one or more hard constraints did not match any of the available pixel formats. If your application is sufficiently flexible, downgrade your requirements and try again. Otherwise, inform the user that their machine does not match your requirements.</para></simplesect>
<simplesect kind="par"><title></title><para>If emitted when querying the clipboard, ignore the error or report it to the user, as appropriate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="589" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a54ddb14825a1541a56e22afb5f832a9e" prot="public" static="no">
        <name>GLFW_FOCUSED</name>
        <initializer>0x00020001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="592" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a39d44b7c056e55e581355a92d240b58a" prot="public" static="no">
        <name>GLFW_ICONIFIED</name>
        <initializer>0x00020002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="593" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1adba13c7a1b3aa40831eb2beedbd5bd1d" prot="public" static="no">
        <name>GLFW_RESIZABLE</name>
        <initializer>0x00020003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="594" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1afb3cdc45297e06d8f1eb13adc69ca6c4" prot="public" static="no">
        <name>GLFW_VISIBLE</name>
        <initializer>0x00020004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="595" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a21b854d36314c94d65aed84405b2f25e" prot="public" static="no">
        <name>GLFW_DECORATED</name>
        <initializer>0x00020005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="596" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a9d9874fc928200136a6dcdad726aa252" prot="public" static="no">
        <name>GLFW_AUTO_ICONIFY</name>
        <initializer>0x00020006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="597" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a7fb0be51407783b41adbf5bec0b09d80" prot="public" static="no">
        <name>GLFW_FLOATING</name>
        <initializer>0x00020007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="598" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1af78ed8e417dbcc1e354906cc2708c982" prot="public" static="no">
        <name>GLFW_RED_BITS</name>
        <initializer>0x00021001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="600" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1afba3b72638c914e5fb8a237dd4c50d4d" prot="public" static="no">
        <name>GLFW_GREEN_BITS</name>
        <initializer>0x00021002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="601" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ab292ea403db6d514537b515311bf9ae3" prot="public" static="no">
        <name>GLFW_BLUE_BITS</name>
        <initializer>0x00021003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="602" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1afed79a3f468997877da86c449bd43e8c" prot="public" static="no">
        <name>GLFW_ALPHA_BITS</name>
        <initializer>0x00021004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="603" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a318a55eac1fee57dfe593b6d38149d07" prot="public" static="no">
        <name>GLFW_DEPTH_BITS</name>
        <initializer>0x00021005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="604" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a5339890a45a1fb38e93cb9fcc5fd069d" prot="public" static="no">
        <name>GLFW_STENCIL_BITS</name>
        <initializer>0x00021006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="605" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1aead34a9a683b2bc20eecf30ba738bfc6" prot="public" static="no">
        <name>GLFW_ACCUM_RED_BITS</name>
        <initializer>0x00021007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="606" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a65713cee1326f8e9d806fdf93187b471" prot="public" static="no">
        <name>GLFW_ACCUM_GREEN_BITS</name>
        <initializer>0x00021008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="607" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a22bbe9104a8ce1f8b88fb4f186aa36ce" prot="public" static="no">
        <name>GLFW_ACCUM_BLUE_BITS</name>
        <initializer>0x00021009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="608" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ae829b55591c18169a40ab4067a041b1f" prot="public" static="no">
        <name>GLFW_ACCUM_ALPHA_BITS</name>
        <initializer>0x0002100A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="609" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ab05108c5029443b371112b031d1fa174" prot="public" static="no">
        <name>GLFW_AUX_BUFFERS</name>
        <initializer>0x0002100B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="610" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a83d991efca02537e2d69969135b77b03" prot="public" static="no">
        <name>GLFW_STEREO</name>
        <initializer>0x0002100C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="611" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a2cdf86fdcb7722fb8829c4e201607535" prot="public" static="no">
        <name>GLFW_SAMPLES</name>
        <initializer>0x0002100D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="612" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a444a8f00414a63220591f9fdb7b5642b" prot="public" static="no">
        <name>GLFW_SRGB_CAPABLE</name>
        <initializer>0x0002100E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="613" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a0f20825e6e47ee8ba389024519682212" prot="public" static="no">
        <name>GLFW_REFRESH_RATE</name>
        <initializer>0x0002100F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="614" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a714a5d569e8a274ea58fdfa020955339" prot="public" static="no">
        <name>GLFW_DOUBLEBUFFER</name>
        <initializer>0x00021010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="615" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a649309cf72a3d3de5b1348ca7936c95b" prot="public" static="no">
        <name>GLFW_CLIENT_API</name>
        <initializer>0x00022001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="617" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1afe5e4922de1f9932d7e9849bb053b0c0" prot="public" static="no">
        <name>GLFW_CONTEXT_VERSION_MAJOR</name>
        <initializer>0x00022002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="618" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a31aca791e4b538c4e4a771eb95cc2d07" prot="public" static="no">
        <name>GLFW_CONTEXT_VERSION_MINOR</name>
        <initializer>0x00022003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="619" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1afb9475071aa77c6fb05ca5a5c8678a08" prot="public" static="no">
        <name>GLFW_CONTEXT_REVISION</name>
        <initializer>0x00022004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="620" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ade3593916b4c507900aa2d6844810e00" prot="public" static="no">
        <name>GLFW_CONTEXT_ROBUSTNESS</name>
        <initializer>0x00022005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="621" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a13d24b12465da8b28985f46c8557925b" prot="public" static="no">
        <name>GLFW_OPENGL_FORWARD_COMPAT</name>
        <initializer>0x00022006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="622" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a87ec2df0b915201e950ca42d5d0831e1" prot="public" static="no">
        <name>GLFW_OPENGL_DEBUG_CONTEXT</name>
        <initializer>0x00022007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="623" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a44f3a6b4261fbe351e0b950b0f372e12" prot="public" static="no">
        <name>GLFW_OPENGL_PROFILE</name>
        <initializer>0x00022008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="624" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a72b648a8378fe3310c7c7bbecc0f7be6" prot="public" static="no">
        <name>GLFW_CONTEXT_RELEASE_BEHAVIOR</name>
        <initializer>0x00022009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="625" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a01b3f66db266341425e9abee6b257db2" prot="public" static="no">
        <name>GLFW_OPENGL_API</name>
        <initializer>0x00030001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="627" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a28d9b3bc6c2a522d815c8e146595051f" prot="public" static="no">
        <name>GLFW_OPENGL_ES_API</name>
        <initializer>0x00030002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="628" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a8b306cb27f5bb0d6d67c7356a0e0fc34" prot="public" static="no">
        <name>GLFW_NO_ROBUSTNESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="630" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1aee84a679230d205005e22487ff678a85" prot="public" static="no">
        <name>GLFW_NO_RESET_NOTIFICATION</name>
        <initializer>0x00031001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="631" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1aec1132f245143fc915b2f0995228564c" prot="public" static="no">
        <name>GLFW_LOSE_CONTEXT_ON_RESET</name>
        <initializer>0x00031002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="632" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ad6f2335d6f21cc9bab96633b1c111d5f" prot="public" static="no">
        <name>GLFW_OPENGL_ANY_PROFILE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="634" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1af094bb16da76f66ebceb19ee213b3de8" prot="public" static="no">
        <name>GLFW_OPENGL_CORE_PROFILE</name>
        <initializer>0x00032001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="635" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ac06b663d79c8fcf04669cc8fcc0b7670" prot="public" static="no">
        <name>GLFW_OPENGL_COMPAT_PROFILE</name>
        <initializer>0x00032002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="636" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1aade31da5b884a84a7625c6b059b9132c" prot="public" static="no">
        <name>GLFW_CURSOR</name>
        <initializer>0x00033001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="638" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="638" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ae3bbe2315b7691ab088159eb6c9110fc" prot="public" static="no">
        <name>GLFW_STICKY_KEYS</name>
        <initializer>0x00033002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="639" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="639" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a4d7ce8ce71030c3b04e2b78145bc59d1" prot="public" static="no">
        <name>GLFW_STICKY_MOUSE_BUTTONS</name>
        <initializer>0x00033003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="640" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ae04dd25c8577e19fa8c97368561f6c68" prot="public" static="no">
        <name>GLFW_CURSOR_NORMAL</name>
        <initializer>0x00034001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="642" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1ac4d5cb9d78de8573349c58763d53bf11" prot="public" static="no">
        <name>GLFW_CURSOR_HIDDEN</name>
        <initializer>0x00034002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="643" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88" prot="public" static="no">
        <name>GLFW_CURSOR_DISABLED</name>
        <initializer>0x00034003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="644" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a6b47d806f285efe9bfd7aeec667297ee" prot="public" static="no">
        <name>GLFW_ANY_RELEASE_BEHAVIOR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="646" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a999961d391db49cb4f949c1dece0e13b" prot="public" static="no">
        <name>GLFW_RELEASE_BEHAVIOR_FLUSH</name>
        <initializer>0x00035001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="647" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1afca09088eccacdce4b59036cfae349c5" prot="public" static="no">
        <name>GLFW_RELEASE_BEHAVIOR_NONE</name>
        <initializer>0x00035002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="648" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" prot="public" static="no">
        <name>GLFW_ARROW_CURSOR</name>
        <initializer>0x00036001</initializer>
        <briefdescription>
<para>The regular arrow cursor shape. </para>        </briefdescription>
        <detaileddescription>
<para>The regular arrow cursor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="661" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga36185f4375eaada1b04e431244774c86" prot="public" static="no">
        <name>GLFW_IBEAM_CURSOR</name>
        <initializer>0x00036002</initializer>
        <briefdescription>
<para>The text input I-beam cursor shape. </para>        </briefdescription>
        <detaileddescription>
<para>The text input I-beam cursor shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="666" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22" prot="public" static="no">
        <name>GLFW_CROSSHAIR_CURSOR</name>
        <initializer>0x00036003</initializer>
        <briefdescription>
<para>The crosshair shape. </para>        </briefdescription>
        <detaileddescription>
<para>The crosshair shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="671" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1ga1db35e20849e0837c82e3dc1fd797263" prot="public" static="no">
        <name>GLFW_HAND_CURSOR</name>
        <initializer>0x00036004</initializer>
        <briefdescription>
<para>The hand shape. </para>        </briefdescription>
        <detaileddescription>
<para>The hand shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="676" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gabb3eb0109f11bb808fc34659177ca962" prot="public" static="no">
        <name>GLFW_HRESIZE_CURSOR</name>
        <initializer>0x00036005</initializer>
        <briefdescription>
<para>The horizontal resize arrow shape. </para>        </briefdescription>
        <detaileddescription>
<para>The horizontal resize arrow shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="681" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__shapes_1gaf024f0e1ff8366fb2b5c260509a1fce5" prot="public" static="no">
        <name>GLFW_VRESIZE_CURSOR</name>
        <initializer>0x00036006</initializer>
        <briefdescription>
<para>The vertical resize arrow shape. </para>        </briefdescription>
        <detaileddescription>
<para>The vertical resize arrow shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="686" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1abe11513fd1ffbee5bb9b173f06028b9e" prot="public" static="no">
        <name>GLFW_CONNECTED</name>
        <initializer>0x00040001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="689" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1aab64b25921ef21d89252d6f0a71bfc32" prot="public" static="no">
        <name>GLFW_DISCONNECTED</name>
        <initializer>0x00040002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="690" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571" prot="public" static="no">
        <name>GLFW_DONT_CARE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="692" column="9" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(* GLFWglproc) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>GLFWglproc</name>
        <briefdescription>
<para>Client API function pointer type. </para>        </briefdescription>
        <detaileddescription>
<para>Generic function pointer used for returning client API function pointers without forcing a cast from a regular pointer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="706" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" prot="public" static="no">
        <type>struct <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref></type>
        <definition>typedef struct GLFWmonitor GLFWmonitor</definition>
        <argsstring></argsstring>
        <name>GLFWmonitor</name>
        <briefdescription>
<para>Opaque monitor object. </para>        </briefdescription>
        <detaileddescription>
<para>Opaque monitor object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="706" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" prot="public" static="no">
        <type>struct <ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref></type>
        <definition>typedef struct GLFWwindow GLFWwindow</definition>
        <argsstring></argsstring>
        <name>GLFWwindow</name>
        <briefdescription>
<para>Opaque window object. </para>        </briefdescription>
        <detaileddescription>
<para>Opaque window object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="706" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" prot="public" static="no">
        <type>struct <ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref></type>
        <definition>typedef struct GLFWcursor GLFWcursor</definition>
        <argsstring></argsstring>
        <name>GLFWcursor</name>
        <briefdescription>
<para>Opaque cursor object. </para>        </briefdescription>
        <detaileddescription>
<para>Opaque cursor object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="706" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__init_1ga6b8a2639706d5c409fc1287e8f55e928" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWerrorfun) (int, const char *)</definition>
        <argsstring>)(int, const char *)</argsstring>
        <name>GLFWerrorfun</name>
        <briefdescription>
<para>The function signature for error callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for error callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">error</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="group__errors" kindref="compound">error code</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">description</parametername>
</parameternamelist>
<parameterdescription>
<para>A UTF-8 encoded string describing the error.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__init_1ga5919096b958c47102126061fb5a6f9c3" kindref="member">glfwSetErrorCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="743" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1gafd8db81fdb0e850549dc6bace5ed697a" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWwindowposfun) (GLFWwindow *, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int)</argsstring>
        <name>GLFWwindowposfun</name>
        <briefdescription>
<para>The function signature for window position callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for window position callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that was moved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new x-coordinate, in screen coordinates, of the upper-left corner of the client area of the window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new y-coordinate, in screen coordinates, of the upper-left corner of the client area of the window.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__window_1gaea610899c4cb070dcd655c6de1fe1d2c" kindref="member">glfwSetWindowPosCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="759" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1gae49ee6ebc03fa2da024b89943a331355" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWwindowsizefun) (GLFWwindow *, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int)</argsstring>
        <name>GLFWwindowsizefun</name>
        <briefdescription>
<para>The function signature for window resize callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for window size callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that was resized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width, in screen coordinates, of the window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height, in screen coordinates, of the window.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__window_1ga150dad5f364425916c5816074cffa5e7" kindref="member">glfwSetWindowSizeCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="773" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga93e7c2555bd837f4ed8b20f76cada72e" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWwindowclosefun) (GLFWwindow *)</definition>
        <argsstring>)(GLFWwindow *)</argsstring>
        <name>GLFWwindowclosefun</name>
        <briefdescription>
<para>The function signature for window close callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for window close callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that the user attempted to close.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__window_1ga5b827da350141c789acd64f5c4f7a0e1" kindref="member">glfwSetWindowCloseCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="785" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga7a56f9e0227e2cd9470d80d919032e08" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWwindowrefreshfun) (GLFWwindow *)</definition>
        <argsstring>)(GLFWwindow *)</argsstring>
        <name>GLFWwindowrefreshfun</name>
        <briefdescription>
<para>The function signature for window content refresh callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for window refresh callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose content needs to be refreshed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__window_1ga9d2621fbc271a0cdc0ce91f9749f46e3" kindref="member">glfwSetWindowRefreshCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="797" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga58be2061828dd35080bb438405d3a7e2" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWwindowfocusfun) (GLFWwindow *, int)</definition>
        <argsstring>)(GLFWwindow *, int)</argsstring>
        <name>GLFWwindowfocusfun</name>
        <briefdescription>
<para>The function signature for window focus/defocus callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for window focus callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that gained or lost input focus. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">focused</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GL_TRUE</computeroutput> if the window was given input focus, or <computeroutput>GL_FALSE</computeroutput> if it lost it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__window_1gac89c6534ba7fbab6f6c68b855656c0d4" kindref="member">glfwSetWindowFocusCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="811" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1gad2d4e4c3d28b1242e742e8268b9528af" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWwindowiconifyfun) (GLFWwindow *, int)</definition>
        <argsstring>)(GLFWwindow *, int)</argsstring>
        <name>GLFWwindowiconifyfun</name>
        <briefdescription>
<para>The function signature for window iconify/restore callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for window iconify/restore callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that was iconified or restored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">iconified</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GL_TRUE</computeroutput> if the window was iconified, or <computeroutput>GL_FALSE</computeroutput> if it was restored.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__window_1ga17cd86946117b56c76397530900519db" kindref="member">glfwSetWindowIconifyCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="826" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="826" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__window_1ga3e218ef9ff826129c55a7d5f6971a285" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWframebuffersizefun) (GLFWwindow *, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int)</argsstring>
        <name>GLFWframebuffersizefun</name>
        <briefdescription>
<para>The function signature for framebuffer resize callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for framebuffer resize callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose framebuffer was resized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width, in pixels, of the framebuffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height, in pixels, of the framebuffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__window_1gad766bcdb4465f9c6c62e5d8ca7cfba56" kindref="member">glfwSetFramebufferSizeCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="841" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="841" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga39893a4a7e7c3239c98d29c9e084350c" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWmousebuttonfun) (GLFWwindow *, int, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int, int)</argsstring>
        <name>GLFWmousebuttonfun</name>
        <briefdescription>
<para>The function signature for mouse button callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for mouse button callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">button</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__buttons" kindref="compound">mouse button</ref> that was pressed or released. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit field describing which <ref refid="group__mods" kindref="compound">modifier keys</ref> were held down.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1ga20e5ba1ce4e086aedd48a06dc311c95f" kindref="member">glfwSetMouseButtonCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="858" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga4cfad918fa836f09541e7b9acd36686c" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWcursorposfun) (GLFWwindow *, double, double)</definition>
        <argsstring>)(GLFWwindow *, double, double)</argsstring>
        <name>GLFWcursorposfun</name>
        <briefdescription>
<para>The function signature for cursor position callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for cursor position callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new x-coordinate, in screen coordinates, of the cursor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new y-coordinate, in screen coordinates, of the cursor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1ga9c49c0d3d3c775c3124726f1d902124d" kindref="member">glfwSetCursorPosCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="872" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="872" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga51ab436c41eeaed6db5a0c9403b1c840" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWcursorenterfun) (GLFWwindow *, int)</definition>
        <argsstring>)(GLFWwindow *, int)</argsstring>
        <name>GLFWcursorenterfun</name>
        <briefdescription>
<para>The function signature for cursor enter/leave callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for cursor enter/leave callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entered</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GL_TRUE</computeroutput> if the cursor entered the window&apos;s client area, or <computeroutput>GL_FALSE</computeroutput> if it left it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1gaa20014985561efeb2c53f1956f727830" kindref="member">glfwSetCursorEnterCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="886" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga4687e2199c60a18a8dd1da532e6d75c9" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWscrollfun) (GLFWwindow *, double, double)</definition>
        <argsstring>)(GLFWwindow *, double, double)</argsstring>
        <name>GLFWscrollfun</name>
        <briefdescription>
<para>The function signature for scroll callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for scroll callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xoffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The scroll offset along the x-axis. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yoffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The scroll offset along the y-axis.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1ga29011514e93368712a3063a28707ced3" kindref="member">glfwSetScrollCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="900" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="900" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1ga0192a232a41e4e82948217c8ba94fdfd" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWkeyfun) (GLFWwindow *, int, int, int, int)</definition>
        <argsstring>)(GLFWwindow *, int, int, int, int)</argsstring>
        <name>GLFWkeyfun</name>
        <briefdescription>
<para>The function signature for keyboard key callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for keyboard key callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__keys" kindref="compound">keyboard key</ref> that was pressed or released. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scancode</parametername>
</parameternamelist>
<parameterdescription>
<para>The system-specific scancode of the key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">action</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>GLFW_PRESS</computeroutput>, <computeroutput>GLFW_RELEASE</computeroutput> or <computeroutput>GLFW_REPEAT</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit field describing which <ref refid="group__mods" kindref="compound">modifier keys</ref> were held down.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1gaa73bb92f628a2a0be9c132d56f19362c" kindref="member">glfwSetKeyCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="917" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="917" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1gabf24451c7ceb1952bc02b17a0d5c3e5f" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWcharfun) (GLFWwindow *, unsigned int)</definition>
        <argsstring>)(GLFWwindow *, unsigned int)</argsstring>
        <name>GLFWcharfun</name>
        <briefdescription>
<para>The function signature for Unicode character callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for Unicode character callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">codepoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unicode code point of the character.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1ga07b2959b23dc3e466ce7475746021002" kindref="member">glfwSetCharCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="930" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1gae36fb6897d2b7df9b128900c8ce9c507" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWcharmodsfun) (GLFWwindow *, unsigned int, int)</definition>
        <argsstring>)(GLFWwindow *, unsigned int, int)</argsstring>
        <name>GLFWcharmodsfun</name>
        <briefdescription>
<para>The function signature for Unicode character with modifiers callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for Unicode character with modifiers callback functions. It is called for each input character, regardless of what modifier keys are held down.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">codepoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unicode code point of the character. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit field describing which <ref refid="group__mods" kindref="compound">modifier keys</ref> were held down.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1gae6eee0bda7429bfe8028615847cf6795" kindref="member">glfwSetCharModsCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="948" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="948" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__input_1gab71f4ca80b651462852e601caf308c4a" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWdropfun) (GLFWwindow *, int, const char **)</definition>
        <argsstring>)(GLFWwindow *, int, const char **)</argsstring>
        <name>GLFWdropfun</name>
        <briefdescription>
<para>The function signature for file drop callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for file drop callbacks.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that received the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of dropped files. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">paths</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-8 encoded file and/or directory path names.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__input_1gad4fc40df63a5d0441ab06de9a585cc04" kindref="member">glfwSetDropCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="962" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="962" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1ga8a7ee579a66720f24d656526f3e44c63" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  GLFWmonitorfun) (GLFWmonitor *, int)</definition>
        <argsstring>)(GLFWmonitor *, int)</argsstring>
        <name>GLFWmonitorfun</name>
        <briefdescription>
<para>The function signature for monitor configuration callbacks. </para>        </briefdescription>
        <detaileddescription>
<para>This is the function signature for monitor configuration callback functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor that was connected or disconnected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CONNECTED</computeroutput> or <computeroutput>GLFW_DISCONNECTED</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__monitor_1gacfa9978e57c73670577d530df23bf275" kindref="member">glfwSetMonitorCallback</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="975" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="975" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1gae48aadf4ea0967e6605c8f58fa5daccb" prot="public" static="no">
        <type>struct <ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref></type>
        <definition>typedef struct GLFWvidmode  GLFWvidmode</definition>
        <argsstring></argsstring>
        <name>GLFWvidmode</name>
        <briefdescription>
<para>Video mode type. </para>        </briefdescription>
        <detaileddescription>
<para>This describes a single video mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1003" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__monitor_1gaec0bd37af673be8813592849f13e02f0" prot="public" static="no">
        <type>struct <ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref></type>
        <definition>typedef struct GLFWgammaramp  GLFWgammaramp</definition>
        <argsstring></argsstring>
        <name>GLFWgammaramp</name>
        <briefdescription>
<para>Gamma ramp. </para>        </briefdescription>
        <detaileddescription>
<para>This describes the gamma ramp for a monitor.</para><para><simplesect kind="see"><para><ref refid="group__monitor_1gaeeac9198f3c91b83440eed679441f76b" kindref="member">glfwGetGammaRamp</ref> <ref refid="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" kindref="member">glfwSetGammaRamp</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1027" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="glfw3_8h_1ac81c32f4437de7b3aa58ab62c3d9e5b1" prot="public" static="no">
        <type>struct <ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref></type>
        <definition>typedef struct GLFWimage  GLFWimage</definition>
        <argsstring></argsstring>
        <name>GLFWimage</name>
        <briefdescription>
<para>Image data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1042" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwInit</definition>
        <argsstring>(void)</argsstring>
        <name>glfwInit</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Initializes the GLFW library. </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes the GLFW library. Before most GLFW functions can be used, GLFW must be initialized, and before an application terminates GLFW should be terminated in order to free any resources allocated during or after initialization.</para><para>If this function fails, it calls <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref> before returning. If it succeeds, you should call <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref> before the application exits.</para><para>Additional calls to this function after successful initialization but before termination will return <computeroutput>GL_TRUE</computeroutput> immediately.</para><para><simplesect kind="return"><para><computeroutput>GL_TRUE</computeroutput> if successful, or <computeroutput>GL_FALSE</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="remark"><para><bold>OS X:</bold> This function will change the current directory of the application to the <computeroutput>Contents/Resources</computeroutput> subdirectory of the application&apos;s bundle, if present. This can be disabled with a compile-time option.</para></simplesect>
<simplesect kind="remark"><para><bold>X11:</bold> If the <computeroutput>LC_CTYPE</computeroutput> category of the current locale is set to <computeroutput>&quot;C&quot;</computeroutput> then the environment&apos;s locale will be applied to that category. This is done because character input will not function when <computeroutput>LC_CTYPE</computeroutput> is set to <computeroutput>&quot;C&quot;</computeroutput>. If another locale was set before this function was called, it will be left untouched.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>intro_init </para></simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1086" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwTerminate</definition>
        <argsstring>(void)</argsstring>
        <name>glfwTerminate</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Terminates the GLFW library. </para>        </briefdescription>
        <detaileddescription>
<para>This function destroys all remaining windows and cursors, restores any modified gamma ramps and frees any other allocated resources. Once this function is called, you must again call <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref> successfully before you will be able to use most GLFW functions.</para><para>If GLFW has been successfully initialized, this function should be called before the application exits. If initialization fails, there is no need to call this function, as it is called by <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref> before it returns failure.</para><para><simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para></simplesect>
<simplesect kind="warning"><para>No window&apos;s context may be current on another thread when this function is called.</para></simplesect>
<simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>intro_init </para></simplesect>
<simplesect kind="see"><para><ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1ga2402c7824ac0194c13722790ff9559ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetVersion</definition>
        <argsstring>(int *major, int *minor, int *rev)</argsstring>
        <name>glfwGetVersion</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>major</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>minor</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>rev</declname>
        </param>
        <briefdescription>
<para>Retrieves the version of the GLFW library. </para>        </briefdescription>
        <detaileddescription>
<para>This function retrieves the major, minor and revision numbers of the GLFW library. It is intended for when you are using GLFW as a shared library and want to ensure that you are using the minimum required version.</para><para>Any or all of the version arguments may be <computeroutput>NULL</computeroutput>. This function always succeeds.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">major</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the major version number, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">minor</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the minor version number, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rev</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the revision number, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>intro_version </para></simplesect>
<simplesect kind="see"><para><ref refid="group__init_1ga4b9092ac5eace57d94d3cd551d6b8ded" kindref="member">glfwGetVersionString</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1ga4b9092ac5eace57d94d3cd551d6b8ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const char *</type>
        <definition>GLFWAPI const char* glfwGetVersionString</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetVersionString</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Returns a string describing the compile-time configuration. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the compile-time generated version string of the GLFW library binary. It describes the version, platform, compiler and any platform-specific compile-time options.</para><para><bold>Do not use the version string</bold> to parse the GLFW library version. The <ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref> function already provides the version of the running library binary.</para><para>This function always succeeds.</para><para><simplesect kind="return"><para>The GLFW version string.</para></simplesect>
<simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned string is static and compile-time generated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>intro_version </para></simplesect>
<simplesect kind="see"><para><ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__init_1ga5919096b958c47102126061fb5a6f9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__init_1ga6b8a2639706d5c409fc1287e8f55e928" kindref="member">GLFWerrorfun</ref></type>
        <definition>GLFWAPI GLFWerrorfun glfwSetErrorCallback</definition>
        <argsstring>(GLFWerrorfun cbfun)</argsstring>
        <name>glfwSetErrorCallback</name>
        <param>
          <type><ref refid="group__init_1ga6b8a2639706d5c409fc1287e8f55e928" kindref="member">GLFWerrorfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the error callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the error callback, which is called with an error code and a human-readable description each time a GLFW error occurs.</para><para>The error callback is called on the thread where the error occurred. If you are using GLFW from multiple threads, your error callback needs to be written accordingly.</para><para>Because the description string may have been generated specifically for that error, it is not guaranteed to be valid after the callback has returned. If you wish to use it after the callback returns, you need to make a copy.</para><para>Once set, the error callback remains set even after the library has been terminated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set.</para></simplesect>
<simplesect kind="remark"><para>This function may be called before <ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>error_handling</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gab4d483284c57e28837bc2cd9639e9665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> **</type>
        <definition>GLFWAPI GLFWmonitor** glfwGetMonitors</definition>
        <argsstring>(int *count)</argsstring>
        <name>glfwGetMonitors</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the currently connected monitors. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns an array of handles for all currently connected monitors.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of monitors in the returned array. This is set to zero if an error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of monitor handles, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned array is allocated and freed by GLFW. You should not free it yourself. It is guaranteed to be valid only until the monitor configuration changes or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_monitors </para></simplesect>
<simplesect kind="see"><para>monitor_event </para></simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga59ea49f377fe701dd76764183e64d9f4" kindref="member">glfwGetPrimaryMonitor</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga59ea49f377fe701dd76764183e64d9f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
        <definition>GLFWAPI GLFWmonitor* glfwGetPrimaryMonitor</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetPrimaryMonitor</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Returns the primary monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the primary monitor. This is usually the monitor where elements like the Windows task bar or the OS X menu bar is located.</para><para><simplesect kind="return"><para>The primary monitor, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_monitors </para></simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1gab4d483284c57e28837bc2cd9639e9665" kindref="member">glfwGetMonitors</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga45b5481a614ad7beb2aade9746d07563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetMonitorPos</definition>
        <argsstring>(GLFWmonitor *monitor, int *xpos, int *ypos)</argsstring>
        <name>glfwGetMonitorPos</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Returns the position of the monitor&apos;s viewport on the virtual screen. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the position, in screen coordinates, of the upper-left corner of the specified monitor.</para><para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor x-coordinate, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the monitor y-coordinate, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_properties</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gad0e93a9e42b32394369cabbbdc1ab702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetMonitorPhysicalSize</definition>
        <argsstring>(GLFWmonitor *monitor, int *widthMM, int *heightMM)</argsstring>
        <name>glfwGetMonitorPhysicalSize</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>widthMM</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>heightMM</declname>
        </param>
        <briefdescription>
<para>Returns the physical size of the monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the size, in millimetres, of the display area of the specified monitor.</para><para>Some systems do not provide accurate monitor size information, either because the monitor <ulink url="https://en.wikipedia.org/wiki/Extended_display_identification_data">EDID</ulink> data is incorrect or because the driver does not report it accurately.</para><para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">widthMM</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in millimetres, of the monitor&apos;s display area, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">heightMM</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in millimetres, of the monitor&apos;s display area, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><bold>Windows:</bold> The OS calculates the returned physical size from the current resolution and system DPI instead of querying the monitor EDID data.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_properties</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga22f62011bae33ea8d2974eff5d14f9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const char *</type>
        <definition>GLFWAPI const char* glfwGetMonitorName</definition>
        <argsstring>(GLFWmonitor *monitor)</argsstring>
        <name>glfwGetMonitorName</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
<para>Returns the name of the specified monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns a human-readable name, encoded as UTF-8, of the specified monitor. The name typically reflects the make and model of the monitor and is not guaranteed to be unique among the connected monitors.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded name of the monitor, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_properties</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gacfa9978e57c73670577d530df23bf275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__monitor_1ga8a7ee579a66720f24d656526f3e44c63" kindref="member">GLFWmonitorfun</ref></type>
        <definition>GLFWAPI GLFWmonitorfun glfwSetMonitorCallback</definition>
        <argsstring>(GLFWmonitorfun cbfun)</argsstring>
        <name>glfwSetMonitorCallback</name>
        <param>
          <type><ref refid="group__monitor_1ga8a7ee579a66720f24d656526f3e44c63" kindref="member">GLFWmonitorfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the monitor configuration callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the monitor configuration callback, or removes the currently set callback. This is called when a monitor is connected to or disconnected from the system.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<xrefsect id="bug_1_bug000001"><xreftitle>Bug</xreftitle><xrefdescription><para><bold>X11:</bold> This callback is not yet called on monitor configuration changes.</para></xrefdescription></xrefsect></para><para><simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_event</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga811c28d61595e630774389985947c665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const <ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref> *</type>
        <definition>GLFWAPI const GLFWvidmode* glfwGetVideoModes</definition>
        <argsstring>(GLFWmonitor *monitor, int *count)</argsstring>
        <name>glfwGetVideoModes</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the available video modes for the specified monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns an array of all video modes supported by the specified monitor. The returned array is sorted in ascending order, first by color bit depth (the sum of all channel depths) and then by resolution area (the product of width and height).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of video modes in the returned array. This is set to zero if an error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of video modes, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected, this function is called again for that monitor or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_modes </para></simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1gac234b63ec525c70d7e18ac84aca088c6" kindref="member">glfwGetVideoMode</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Changed to return an array of modes for a specific monitor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gac234b63ec525c70d7e18ac84aca088c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const <ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref> *</type>
        <definition>GLFWAPI const GLFWvidmode* glfwGetVideoMode</definition>
        <argsstring>(GLFWmonitor *monitor)</argsstring>
        <name>glfwGetVideoMode</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
<para>Returns the current mode of the specified monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the current video mode of the specified monitor. If you have created a full screen window for that monitor, the return value will depend on whether that window is iconified.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current mode of the monitor, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified monitor is disconnected or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_modes </para></simplesect>
<simplesect kind="see"><para><ref refid="group__monitor_1ga811c28d61595e630774389985947c665" kindref="member">glfwGetVideoModes</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwGetDesktopMode</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1ga3e4ab484476c935b4cd0bf49a5c429d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetGamma</definition>
        <argsstring>(GLFWmonitor *monitor, float gamma)</argsstring>
        <name>glfwSetGamma</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Generates a gamma ramp and sets it for the specified monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function generates a 256-element gamma ramp from the specified exponent and then calls <ref refid="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" kindref="member">glfwSetGammaRamp</ref> with it. The value must be a finite number greater than zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose gamma ramp to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired exponent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_gamma</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gaeeac9198f3c91b83440eed679441f76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const <ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref> *</type>
        <definition>GLFWAPI const GLFWgammaramp* glfwGetGammaRamp</definition>
        <argsstring>(GLFWmonitor *monitor)</argsstring>
        <name>glfwGetGammaRamp</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
<para>Returns the current gamma ramp for the specified monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the current gamma ramp of the specified monitor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to query. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current gamma ramp, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned structure and its arrays are allocated and freed by GLFW. You should not free them yourself. They are valid until the specified monitor is disconnected, this function is called again for that monitor or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_gamma</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetGammaRamp</definition>
        <argsstring>(GLFWmonitor *monitor, const GLFWgammaramp *ramp)</argsstring>
        <name>glfwSetGammaRamp</name>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref> *</type>
          <declname>ramp</declname>
        </param>
        <briefdescription>
<para>Sets the current gamma ramp for the specified monitor. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the current gamma ramp for the specified monitor. The original gamma ramp for that monitor is saved by GLFW the first time this function is called and is restored by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor whose gamma ramp to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ramp</parametername>
</parameternamelist>
<parameterdescription>
<para>The gamma ramp to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Gamma ramp sizes other than 256 are not supported by all platforms or graphics hardware.</para></simplesect>
<simplesect kind="remark"><para><bold>Windows:</bold> The gamma ramp size must be 256.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The specified gamma ramp is copied before this function returns.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>monitor_gamma</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwDefaultWindowHints</definition>
        <argsstring>(void)</argsstring>
        <name>glfwDefaultWindowHints</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Resets all window hints to their default values. </para>        </briefdescription>
        <detaileddescription>
<para>This function resets all window hints to their default values.</para><para><simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_hints </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gab6e60483d79175b868d6d4dc1dcc63e2" kindref="member">glfwWindowHint</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gab6e60483d79175b868d6d4dc1dcc63e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwWindowHint</definition>
        <argsstring>(int target, int hint)</argsstring>
        <name>glfwWindowHint</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>Sets the specified window hint to the desired value. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets hints for the next call to <ref refid="group__window_1ga680a02abe0e4494b6759d5703240713e" kindref="member">glfwCreateWindow</ref>. The hints, once set, retain their values until changed by a call to <ref refid="group__window_1gab6e60483d79175b868d6d4dc1dcc63e2" kindref="member">glfwWindowHint</ref> or <ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref>, or until the library is terminated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>The window hint to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the window hint.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_hints </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwOpenWindowHint</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga680a02abe0e4494b6759d5703240713e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
        <definition>GLFWAPI GLFWwindow* glfwCreateWindow</definition>
        <argsstring>(int width, int height, const char *title, GLFWmonitor *monitor, GLFWwindow *share)</argsstring>
        <name>glfwCreateWindow</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
          <declname>monitor</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Creates a window and its associated context. </para>        </briefdescription>
        <detaileddescription>
<para>This function creates a window and its associated OpenGL or OpenGL ES context. Most of the options controlling how the window and its context should be created are specified with window hints.</para><para>Successful creation does not change which context is current. Before you can use the newly created context, you need to make it current. For information about the <computeroutput>share</computeroutput> parameter, see context_sharing.</para><para>The created window, framebuffer and context may differ from what you requested, as not all parameters and hints are hard constraints. This includes the size of the window, especially for full screen windows. To query the actual attributes of the created window, framebuffer and context, use queries like <ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref> and <ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>.</para><para>To create a full screen window, you need to specify the monitor the window will cover. If no monitor is specified, windowed mode will be used. Unless you have a way for the user to choose a specific monitor, it is recommended that you pick the primary monitor. For more information on how to query connected monitors, see monitor_monitors.</para><para>For full screen windows, the specified size becomes the resolution of the window&apos;s <emphasis>desired video mode</emphasis>. As long as a full screen window has input focus, the supported video mode most closely matching the desired video mode is set for the specified monitor. For more information about full screen windows, including the creation of so called <emphasis>windowed full screen</emphasis> or <emphasis>borderless full screen</emphasis> windows, see window_windowed_full_screen.</para><para>By default, newly created windows use the placement recommended by the window system. To create the window at a specific position, make it initially invisible using the GLFW_VISIBLE window hint, set its position and then show it.</para><para>If a full screen window has input focus, the screensaver is prohibited from starting.</para><para>Window systems put limits on window sizes. Very large or very small window dimensions may be overridden by the window system on creation. Check the actual size after creation.</para><para>The swap interval is not set during window creation and the initial value may vary depending on driver settings and defaults.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width, in screen coordinates, of the window. This must be greater than zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height, in screen coordinates, of the window. This must be greater than zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">title</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial, UTF-8 encoded window title. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">monitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The monitor to use for full screen mode, or <computeroutput>NULL</computeroutput> to use windowed mode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">share</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose context to share resources with, or <computeroutput>NULL</computeroutput> to not share resources. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handle of the created window, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="remark"><para><bold>Windows:</bold> Window creation will fail if the Microsoft GDI software OpenGL implementation is the only one available.</para></simplesect>
<simplesect kind="remark"><para><bold>Windows:</bold> If the executable has an icon resource named <computeroutput>GLFW_ICON,</computeroutput> it will be set as the icon for the window. If no such icon is present, the <computeroutput>IDI_WINLOGO</computeroutput> icon will be used instead.</para></simplesect>
<simplesect kind="remark"><para><bold>Windows:</bold> The context to share resources with may not be current on any other thread.</para></simplesect>
<simplesect kind="remark"><para><bold>OS X:</bold> The GLFW window has no icon, as it is not a document window, but the dock icon will be the same as the application bundle&apos;s icon. For more information on bundles, see the <ulink url="https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFBundles/">Bundle Programming Guide</ulink> in the Mac Developer Library.</para></simplesect>
<simplesect kind="remark"><para><bold>OS X:</bold> The first time a window is created the menu bar is populated with common commands like Hide, Quit and About. The About entry opens a minimal about dialog with information from the application&apos;s bundle. The menu bar can be disabled with a compile-time option.</para></simplesect>
<simplesect kind="remark"><para><bold>OS X:</bold> On OS X 10.10 and later the window frame will not be rendered at full resolution on Retina displays unless the <computeroutput>NSHighResolutionCapable</computeroutput> key is enabled in the application bundle&apos;s <computeroutput>Info.plist</computeroutput>. For more information, see <ulink url="https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Explained/Explained.html">High Resolution Guidelines for OS X</ulink> in the Mac Developer Library.</para></simplesect>
<simplesect kind="remark"><para><bold>X11:</bold> There is no mechanism for setting the window icon yet.</para></simplesect>
<simplesect kind="remark"><para><bold>X11:</bold> Some window managers will not respect the placement of initially hidden windows.</para></simplesect>
<simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_creation </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwOpenWindow</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1645" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga806747476b7247d292be3711c323ea10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwDestroyWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwDestroyWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Destroys the specified window and its context. </para>        </briefdescription>
        <detaileddescription>
<para>This function destroys the specified window and its context. On calling this function, no further callbacks will be called for that window.</para><para>If the context of the specified window is current on the main thread, it is detached before being destroyed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to destroy.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The context of the specified window must not be current on any other thread when this function is called.</para></simplesect>
<simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_creation </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga680a02abe0e4494b6759d5703240713e" kindref="member">glfwCreateWindow</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwCloseWindow</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaa6162f67dfa38b8beda2fea623649332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwWindowShouldClose</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwWindowShouldClose</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Checks the close flag of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the value of the close flag of the specified window.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the close flag.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread. Access is not synchronized.</para></simplesect>
<simplesect kind="see"><para>window_close</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1691" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetWindowShouldClose</definition>
        <argsstring>(GLFWwindow *window, int value)</argsstring>
        <name>glfwSetWindowShouldClose</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the close flag of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the value of the close flag of the specified window. This can be used to override the user&apos;s attempt to close the window, or to signal that it should be closed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose flag to change. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread. Access is not synchronized.</para></simplesect>
<simplesect kind="see"><para>window_close</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1711" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga861ed3414ab8120e2f74151a666ed1dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetWindowTitle</definition>
        <argsstring>(GLFWwindow *window, const char *title)</argsstring>
        <name>glfwSetWindowTitle</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Sets the title of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the window title, encoded as UTF-8, of the specified window.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose title to change. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">title</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-8 encoded window title.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_title</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga0076a8591ef7494d359730cf2250b45b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetWindowPos</definition>
        <argsstring>(GLFWwindow *window, int *xpos, int *ypos)</argsstring>
        <name>glfwGetWindowPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Retrieves the position of the client area of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function retrieves the position, in screen coordinates, of the upper-left corner of the client area of the specified window.</para><para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the x-coordinate of the upper-left corner of the client area, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the y-coordinate of the upper-left corner of the client area, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_pos </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1759" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetWindowPos</definition>
        <argsstring>(GLFWwindow *window, int xpos, int ypos)</argsstring>
        <name>glfwSetWindowPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>xpos</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Sets the position of the client area of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the position, in screen coordinates, of the upper-left corner of the client area of the specified windowed mode window. If the window is a full screen window, this function does nothing.</para><para><bold>Do not use this function</bold> to move an already visible window unless you have very good reasons for doing so, as it will confuse and annoy the user.</para><para>The window manager may put limits on what positions are allowed. GLFW cannot and should not override these limits.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the upper-left corner of the client area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the upper-left corner of the client area.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_pos </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1790" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetWindowSize</definition>
        <argsstring>(GLFWwindow *window, int *width, int *height)</argsstring>
        <name>glfwGetWindowSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Retrieves the size of the client area of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function retrieves the size, in screen coordinates, of the client area of the specified window. If you wish to retrieve the size of the framebuffer of the window in pixels, see <ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>.</para><para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose size to retrieve. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in screen coordinates, of the client area, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in screen coordinates, of the client area, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_size </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1820" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetWindowSize</definition>
        <argsstring>(GLFWwindow *window, int width, int height)</argsstring>
        <name>glfwSetWindowSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets the size of the client area of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the size, in screen coordinates, of the client area of the specified window.</para><para>For full screen windows, this function selects and switches to the resolution closest to the specified size, without affecting the window&apos;s context. As the context is unaffected, the bit depths of the framebuffer remain unchanged.</para><para>The window manager may put limits on what sizes are allowed. GLFW cannot and should not override these limits.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to resize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width of the specified window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height of the specified window.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_size </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetFramebufferSize</definition>
        <argsstring>(GLFWwindow *window, int *width, int *height)</argsstring>
        <name>glfwGetFramebufferSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Retrieves the size of the framebuffer of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function retrieves the size, in pixels, of the framebuffer of the specified window. If you wish to retrieve the size of the window in screen coordinates, see <ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>.</para><para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose framebuffer to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the width, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the height, in pixels, of the framebuffer, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_fbsize </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gad766bcdb4465f9c6c62e5d8ca7cfba56" kindref="member">glfwSetFramebufferSizeCallback</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaad46cdaae2eb732f68d3a1499a7c5409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetWindowFrameSize</definition>
        <argsstring>(GLFWwindow *window, int *left, int *top, int *right, int *bottom)</argsstring>
        <name>glfwGetWindowFrameSize</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>top</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>right</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
<para>Retrieves the size of the frame of the window. </para>        </briefdescription>
        <detaileddescription>
<para>This function retrieves the size, in screen coordinates, of each edge of the frame of the specified window. This size includes the title bar, if the window has one. The size of the frame may vary depending on the window-related hints used to create it.</para><para>Because this function retrieves the size of each window frame edge and not the offset along a particular coordinate axis, the retrieved values will always be zero or positive.</para><para>Any or all of the size arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> size arguments will be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose frame size to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">left</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the left edge of the window frame, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">top</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the top edge of the window frame, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">right</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the right edge of the window frame, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the size, in screen coordinates, of the bottom edge of the window frame, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_size</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1914" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwIconifyWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwIconifyWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Iconifies the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function iconifies (minimizes) the specified window if it was previously restored. If the window is already iconified, this function does nothing.</para><para>If the specified window is a full screen window, the original monitor resolution is restored until the window is restored.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to iconify.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_iconify </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.1.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga1e29caf0b819f578b04db52fff17256c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwRestoreWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwRestoreWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Restores the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function restores the specified window if it was previously iconified (minimized). If the window is already restored, this function does nothing.</para><para>If the specified window is a full screen window, the resolution chosen for the window is restored on the selected monitor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to restore.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_iconify </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" kindref="member">glfwIconifyWindow</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.1.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1965" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwShowWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwShowWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Makes the specified window visible. </para>        </briefdescription>
        <detaileddescription>
<para>This function makes the specified window visible if it was previously hidden. If the window is already visible or is in full screen mode, this function does nothing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to make visible.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_hide </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gaa17e287d521544bdeceafa09ac036e20" kindref="member">glfwHideWindow</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="1985" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaa17e287d521544bdeceafa09ac036e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwHideWindow</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwHideWindow</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Hides the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function hides the specified window if it was previously visible. If the window is already hidden or is in full screen mode, this function does nothing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to hide.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_hide </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" kindref="member">glfwShowWindow</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2005" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaf1525cb3bccd5789c702cc9676ef3403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref> *</type>
        <definition>GLFWAPI GLFWmonitor* glfwGetWindowMonitor</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwGetWindowMonitor</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the monitor that the window uses for full screen mode. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the handle of the monitor that the specified window is in full screen on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The monitor, or <computeroutput>NULL</computeroutput> if the window is in windowed mode or an error occurred.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_monitor</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2025" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga1bb0c7e100418e284dbb800789c63d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwGetWindowAttrib</definition>
        <argsstring>(GLFWwindow *window, int attrib)</argsstring>
        <name>glfwGetWindowAttrib</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>attrib</declname>
        </param>
        <briefdescription>
<para>Returns an attribute of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the value of an attribute of the specified window or its OpenGL or OpenGL ES context.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attrib</parametername>
</parameternamelist>
<parameterdescription>
<para>The window attribute whose value to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the attribute, or zero if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_attribs</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwGetWindowParam</computeroutput> and <computeroutput>glfwGetGLVersion</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2048" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gacc9e68faee3c1763b54cd9bc405cf43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetWindowUserPointer</definition>
        <argsstring>(GLFWwindow *window, void *pointer)</argsstring>
        <name>glfwSetWindowUserPointer</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Sets the user pointer of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the user-defined pointer of the specified window. The current value is retained until the window is destroyed. The initial value is <computeroutput>NULL</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose pointer to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread. Access is not synchronized.</para></simplesect>
<simplesect kind="see"><para>window_userptr </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga0a9ff3b4bf8589e9518e8816d06a8f50" kindref="member">glfwGetWindowUserPointer</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2069" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga0a9ff3b4bf8589e9518e8816d06a8f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref> *</type>
        <definition>GLFWAPI void* glfwGetWindowUserPointer</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwGetWindowUserPointer</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the user pointer of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the current value of the user-defined pointer of the specified window. The initial value is <computeroutput>NULL</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose pointer to return.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread. Access is not synchronized.</para></simplesect>
<simplesect kind="see"><para>window_userptr </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gacc9e68faee3c1763b54cd9bc405cf43e" kindref="member">glfwSetWindowUserPointer</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2088" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gaea610899c4cb070dcd655c6de1fe1d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1gafd8db81fdb0e850549dc6bace5ed697a" kindref="member">GLFWwindowposfun</ref></type>
        <definition>GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowposfun cbfun)</argsstring>
        <name>glfwSetWindowPosCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1gafd8db81fdb0e850549dc6bace5ed697a" kindref="member">GLFWwindowposfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the position callback for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the position callback of the specified window, which is called when the window is moved. The callback is provided with the screen position of the upper-left corner of the client area of the window.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_pos</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga150dad5f364425916c5816074cffa5e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1gae49ee6ebc03fa2da024b89943a331355" kindref="member">GLFWwindowsizefun</ref></type>
        <definition>GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowsizefun cbfun)</argsstring>
        <name>glfwSetWindowSizeCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1gae49ee6ebc03fa2da024b89943a331355" kindref="member">GLFWwindowsizefun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the size callback for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the size callback of the specified window, which is called when the window is resized. The callback is provided with the size, in screen coordinates, of the client area of the window.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_size</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. Updated callback signature. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga5b827da350141c789acd64f5c4f7a0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1ga93e7c2555bd837f4ed8b20f76cada72e" kindref="member">GLFWwindowclosefun</ref></type>
        <definition>GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowclosefun cbfun)</argsstring>
        <name>glfwSetWindowCloseCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga93e7c2555bd837f4ed8b20f76cada72e" kindref="member">GLFWwindowclosefun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the close callback for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the close callback of the specified window, which is called when the user attempts to close the window, for example by clicking the close widget in the title bar.</para><para>The close flag is set before this callback is called, but you can modify it at any time with <ref refid="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" kindref="member">glfwSetWindowShouldClose</ref>.</para><para>The close callback is not triggered by <ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="remark"><para><bold>OS X:</bold> Selecting Quit from the application menu will trigger the close callback for all windows.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_close</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.5.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. Updated callback signature. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga9d2621fbc271a0cdc0ce91f9749f46e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1ga7a56f9e0227e2cd9470d80d919032e08" kindref="member">GLFWwindowrefreshfun</ref></type>
        <definition>GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowrefreshfun cbfun)</argsstring>
        <name>glfwSetWindowRefreshCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga7a56f9e0227e2cd9470d80d919032e08" kindref="member">GLFWwindowrefreshfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the refresh callback for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the refresh callback of the specified window, which is called when the client area of the window needs to be redrawn, for example if the window has been exposed after having been covered by another window.</para><para>On compositing window systems such as Aero, Compiz or Aqua, where the window contents are saved off-screen, this callback may be called only very infrequently or never at all.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_refresh</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.5.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. Updated callback signature. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gac89c6534ba7fbab6f6c68b855656c0d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1ga58be2061828dd35080bb438405d3a7e2" kindref="member">GLFWwindowfocusfun</ref></type>
        <definition>GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowfocusfun cbfun)</argsstring>
        <name>glfwSetWindowFocusCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga58be2061828dd35080bb438405d3a7e2" kindref="member">GLFWwindowfocusfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the focus callback for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the focus callback of the specified window, which is called when the window gains or loses input focus.</para><para>After the focus callback is called for a window that lost input focus, synthetic key and mouse button release events will be generated for all such that had been pressed. For more information, see <ref refid="group__input_1gaa73bb92f628a2a0be9c132d56f19362c" kindref="member">glfwSetKeyCallback</ref> and <ref refid="group__input_1ga20e5ba1ce4e086aedd48a06dc311c95f" kindref="member">glfwSetMouseButtonCallback</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_focus</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga17cd86946117b56c76397530900519db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1gad2d4e4c3d28b1242e742e8268b9528af" kindref="member">GLFWwindowiconifyfun</ref></type>
        <definition>GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWwindowiconifyfun cbfun)</argsstring>
        <name>glfwSetWindowIconifyCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1gad2d4e4c3d28b1242e742e8268b9528af" kindref="member">GLFWwindowiconifyfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the iconify callback for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the iconification callback of the specified window, which is called when the window is iconified or restored.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_iconify</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad766bcdb4465f9c6c62e5d8ca7cfba56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1ga3e218ef9ff826129c55a7d5f6971a285" kindref="member">GLFWframebuffersizefun</ref></type>
        <definition>GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWframebuffersizefun cbfun)</argsstring>
        <name>glfwSetFramebufferSizeCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__window_1ga3e218ef9ff826129c55a7d5f6971a285" kindref="member">GLFWframebuffersizefun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the framebuffer resize callback for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the framebuffer resize callback of the specified window, which is called when the framebuffer of the specified window is resized.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>window_fbsize</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga872d16e4c77f58c0436f356255920cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwPollEvents</definition>
        <argsstring>(void)</argsstring>
        <name>glfwPollEvents</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Processes all pending events. </para>        </briefdescription>
        <detaileddescription>
<para>This function processes only those events that are already in the event queue and then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para><para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the window refresh callback to redraw the contents of your window when necessary during such operations.</para><para>On some platforms, certain events are sent directly to the application without going through the event queue, causing callbacks to be called outside of a call to one of the event processing functions.</para><para>Event processing is not required for joystick input to work.</para><para><simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>events </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1ga6e042d05823c11e11c7339b81a237738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwWaitEvents</definition>
        <argsstring>(void)</argsstring>
        <name>glfwWaitEvents</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Waits until events are queued and processes them. </para>        </briefdescription>
        <detaileddescription>
<para>This function puts the calling thread to sleep until at least one event is available in the event queue. Once one or more events are available, it behaves exactly like <ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>, i.e. the events in the queue are processed and the function then returns immediately. Processing events will cause the window and input callbacks associated with those events to be called.</para><para>Since not all events are associated with callbacks, this function may return without a callback having been called even if you are monitoring all callbacks.</para><para>On some platforms, a window move, resize or menu operation will cause event processing to block. This is due to how event processing is designed on those platforms. You can use the window refresh callback to redraw the contents of your window when necessary during such operations.</para><para>On some platforms, certain callbacks may be called outside of a call to one of the event processing functions.</para><para>If no windows exist, this function returns immediately. For synchronization of threads in applications that do not create windows, use your threading library of choice.</para><para>Event processing is not required for joystick input to work.</para><para><simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>events </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.5. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gad6f6b997278c91c43b35970eb9713d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwPostEmptyEvent</definition>
        <argsstring>(void)</argsstring>
        <name>glfwPostEmptyEvent</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Posts an empty event to the event queue. </para>        </briefdescription>
        <detaileddescription>
<para>This function posts an empty event from the current thread to the event queue, causing <ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref> to return.</para><para>If no windows exist, this function returns immediately. For synchronization of threads in applications that do not create windows, use your threading library of choice.</para><para><simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>events </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga1248dd5b1e566b2817e71547564d6af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwGetInputMode</definition>
        <argsstring>(GLFWwindow *window, int mode)</argsstring>
        <name>glfwGetInputMode</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Returns the value of an input option for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the value of an input option for the specified window. The mode must be one of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetInputMode</definition>
        <argsstring>(GLFWwindow *window, int mode, int value)</argsstring>
        <name>glfwSetInputMode</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets an input option for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets an input mode option for the specified window. The mode must be one of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>.</para><para>If the mode is <computeroutput>GLFW_CURSOR</computeroutput>, the value must be one of the following cursor modes:<itemizedlist>
<listitem><para><computeroutput>GLFW_CURSOR_NORMAL</computeroutput> makes the cursor visible and behaving normally.</para></listitem><listitem><para><computeroutput>GLFW_CURSOR_HIDDEN</computeroutput> makes the cursor invisible when it is over the client area of the window but does not restrict the cursor from leaving.</para></listitem><listitem><para><computeroutput>GLFW_CURSOR_DISABLED</computeroutput> hides and grabs the cursor, providing virtual and unlimited cursor movement. This is useful for implementing for example 3D camera controls.</para></listitem></itemizedlist>
</para><para>If the mode is <computeroutput>GLFW_STICKY_KEYS</computeroutput>, the value must be either <computeroutput>GL_TRUE</computeroutput> to enable sticky keys, or <computeroutput>GL_FALSE</computeroutput> to disable it. If sticky keys are enabled, a key press will ensure that <ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref> returns <computeroutput>GLFW_PRESS</computeroutput> the next time it is called even if the key had been released before the call. This is useful when you are only interested in whether keys have been pressed but not when or in which order.</para><para>If the mode is <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>, the value must be either <computeroutput>GL_TRUE</computeroutput> to enable sticky mouse buttons, or <computeroutput>GL_FALSE</computeroutput> to disable it. If sticky mouse buttons are enabled, a mouse button press will ensure that <ref refid="group__input_1ga6da5efb04f700c312a57a169fa9393a0" kindref="member">glfwGetMouseButton</ref> returns <computeroutput>GLFW_PRESS</computeroutput> the next time it is called even if the mouse button had been released before the call. This is useful when you are only interested in whether mouse buttons have been pressed but not when or in which order.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose input mode to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of <computeroutput>GLFW_CURSOR</computeroutput>, <computeroutput>GLFW_STICKY_KEYS</computeroutput> or <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the specified input mode.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga1248dd5b1e566b2817e71547564d6af9" kindref="member">glfwGetInputMode</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwEnable</computeroutput> and <computeroutput>glfwDisable</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwGetKey</definition>
        <argsstring>(GLFWwindow *window, int key)</argsstring>
        <name>glfwGetKey</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns the last reported state of a keyboard key for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the last state reported for the specified key to the specified window. The returned state is one of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>. The higher-level action <computeroutput>GLFW_REPEAT</computeroutput> is only reported to the key callback.</para><para>If the <computeroutput>GLFW_STICKY_KEYS</computeroutput> input mode is enabled, this function returns <computeroutput>GLFW_PRESS</computeroutput> the first time you call it for a key that was pressed, even if that key has already been released.</para><para>The key functions deal with physical keys, with <ref refid="group__keys" kindref="compound">key tokens</ref> named after their use on the standard US keyboard layout. If you want to input text, use the Unicode character callback instead.</para><para>The <ref refid="group__mods" kindref="compound">modifier key bit masks</ref> are not key tokens and cannot be used with this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <ref refid="group__keys" kindref="compound">keyboard key</ref>. <computeroutput>GLFW_KEY_UNKNOWN</computeroutput> is not a valid key for this function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>input_key</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga6da5efb04f700c312a57a169fa9393a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwGetMouseButton</definition>
        <argsstring>(GLFWwindow *window, int button)</argsstring>
        <name>glfwGetMouseButton</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Returns the last reported state of a mouse button for the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the last state reported for the specified mouse button to the specified window. The returned state is one of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para><para>If the <computeroutput>GLFW_STICKY_MOUSE_BUTTONS</computeroutput> input mode is enabled, this function <computeroutput>GLFW_PRESS</computeroutput> the first time you call it for a mouse button that was pressed, even if that mouse button has already been released.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">button</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <ref refid="group__buttons" kindref="compound">mouse button</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>input_mouse_button</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2503" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gad289438eb7cf53d11eca685373f44105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwGetCursorPos</definition>
        <argsstring>(GLFWwindow *window, double *xpos, double *ypos)</argsstring>
        <name>glfwGetCursorPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Retrieves the position of the cursor relative to the client area of the window. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the position of the cursor, in screen coordinates, relative to the upper-left corner of the client area of the specified window.</para><para>If the cursor is disabled (with <computeroutput>GLFW_CURSOR_DISABLED</computeroutput>) then the cursor position is unbounded and limited only by the minimum and maximum values of a <computeroutput>double</computeroutput>.</para><para>The coordinate can be converted to their integer equivalents with the <computeroutput>floor</computeroutput> function. Casting directly to an integer type works for positive coordinates, but fails for negative ones.</para><para>Any or all of the position arguments may be <computeroutput>NULL</computeroutput>. If an error occurs, all non-<computeroutput>NULL</computeroutput> position arguments will be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the cursor x-coordinate, relative to the left edge of the client area, or <computeroutput>NULL</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the cursor y-coordinate, relative to the to top edge of the client area, or <computeroutput>NULL</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_pos </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" kindref="member">glfwSetCursorPos</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwGetMousePos</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetCursorPos</definition>
        <argsstring>(GLFWwindow *window, double xpos, double ypos)</argsstring>
        <name>glfwSetCursorPos</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
<para>Sets the position of the cursor, relative to the client area of the window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the position, in screen coordinates, of the cursor relative to the upper-left corner of the client area of the specified window. The window must have input focus. If the window does not have input focus when this function is called, it fails silently.</para><para><bold>Do not use this function</bold> to implement things like camera controls. GLFW already provides the <computeroutput>GLFW_CURSOR_DISABLED</computeroutput> cursor mode that hides the cursor, transparently re-centers it and provides unconstrained cursor motion. See <ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref> for more information.</para><para>If the cursor mode is <computeroutput>GLFW_CURSOR_DISABLED</computeroutput> then the cursor position is unconstrained and limited only by the minimum and maximum values of a <computeroutput>double</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate, relative to the left edge of the client area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate, relative to the top edge of the client area.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><bold>X11:</bold> Due to the asynchronous nature of a modern X desktop, it may take a moment for the window focus event to arrive. This means you will not be able to set the cursor position directly after window creation.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_pos </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gad289438eb7cf53d11eca685373f44105" kindref="member">glfwGetCursorPos</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwSetMousePos</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2578" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gac0f0f691f2d110f9acfb4bfe07f1216c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
        <definition>GLFWAPI GLFWcursor* glfwCreateCursor</definition>
        <argsstring>(const GLFWimage *image, int xhot, int yhot)</argsstring>
        <name>glfwCreateCursor</name>
        <param>
          <type>const <ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>xhot</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>yhot</declname>
        </param>
        <briefdescription>
<para>Creates a custom cursor. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new custom cursor image that can be set for a window with <ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>. The cursor can be destroyed with <ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref>. Any remaining cursors are destroyed by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para><para>The pixels are 32-bit little-endian RGBA, i.e. eight bits per channel. They are arranged canonically as packed sequential rows, starting from the top-left corner.</para><para>The cursor hotspot is specified in pixels, relative to the upper-left corner of the cursor image. Like all other coordinate systems in GLFW, the X-axis points to the right and the Y-axis points down.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired cursor image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xhot</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired x-coordinate, in pixels, of the cursor hotspot. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yhot</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired y-coordinate, in pixels, of the cursor hotspot.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handle of the created cursor, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The specified image data is copied before this function returns.</para></simplesect>
<simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_object </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga969dd87ad2ddbf3e1086cc40f235eed1" kindref="member">glfwCreateStandardCursor</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga969dd87ad2ddbf3e1086cc40f235eed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
        <definition>GLFWAPI GLFWcursor* glfwCreateStandardCursor</definition>
        <argsstring>(int shape)</argsstring>
        <name>glfwCreateStandardCursor</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Creates a cursor with a standard shape. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a cursor with a <ref refid="group__shapes" kindref="compound">standard shape</ref>, that can be set for a window with <ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">shape</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the <ref refid="group__shapes" kindref="compound">standard shapes</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new cursor ready to use or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_object </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gac0f0f691f2d110f9acfb4bfe07f1216c" kindref="member">glfwCreateCursor</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwDestroyCursor</definition>
        <argsstring>(GLFWcursor *cursor)</argsstring>
        <name>glfwDestroyCursor</name>
        <param>
          <type><ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
<para>Destroys a cursor. </para>        </briefdescription>
        <detaileddescription>
<para>This function destroys a cursor previously created with <ref refid="group__input_1gac0f0f691f2d110f9acfb4bfe07f1216c" kindref="member">glfwCreateCursor</ref>. Any remaining cursors will be destroyed by <ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor object to destroy.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Reentrancy</title><para>This function may not be called from a callback.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_object </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1gac0f0f691f2d110f9acfb4bfe07f1216c" kindref="member">glfwCreateCursor</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2666" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gafaf103cea2f43530cff7de4e01126a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetCursor</definition>
        <argsstring>(GLFWwindow *window, GLFWcursor *cursor)</argsstring>
        <name>glfwSetCursor</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
<para>Sets the cursor for the window. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the cursor image to be used when the cursor is over the client area of the specified window. The set cursor will only be visible when the cursor mode of the window is <computeroutput>GLFW_CURSOR_NORMAL</computeroutput>.</para><para>On some platforms, the set cursor may not be visible unless the window also has input focus.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to set the cursor for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>The cursor to set, or <computeroutput>NULL</computeroutput> to switch back to the default arrow cursor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_object</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2691" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaa73bb92f628a2a0be9c132d56f19362c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1ga0192a232a41e4e82948217c8ba94fdfd" kindref="member">GLFWkeyfun</ref></type>
        <definition>GLFWAPI GLFWkeyfun glfwSetKeyCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWkeyfun cbfun)</argsstring>
        <name>glfwSetKeyCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga0192a232a41e4e82948217c8ba94fdfd" kindref="member">GLFWkeyfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the key callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the key callback of the specified window, which is called when a key is pressed, repeated or released.</para><para>The key functions deal with physical keys, with layout independent <ref refid="group__keys" kindref="compound">key tokens</ref> named after their values in the standard US keyboard layout. If you want to input text, use the <ref refid="group__input_1ga07b2959b23dc3e466ce7475746021002" kindref="member">character callback</ref> instead.</para><para>When a window loses input focus, it will generate synthetic key release events for all pressed keys. You can tell these events from user-generated events by the fact that the synthetic ones are generated after the focus loss event has been processed, i.e. after the <ref refid="group__window_1gac89c6534ba7fbab6f6c68b855656c0d4" kindref="member">window focus callback</ref> has been called.</para><para>The scancode of a key is specific to that platform or sometimes even to that machine. Scancodes are intended to allow users to bind keys that don&apos;t have a GLFW key token. Such keys have <computeroutput>key</computeroutput> set to <computeroutput>GLFW_KEY_UNKNOWN</computeroutput>, their state is not saved and so it cannot be queried with <ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref>.</para><para>Sometimes GLFW needs to generate synthetic key events, in which case the scancode may be zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new key callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>input_key</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. Updated callback signature. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2735" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga07b2959b23dc3e466ce7475746021002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1gabf24451c7ceb1952bc02b17a0d5c3e5f" kindref="member">GLFWcharfun</ref></type>
        <definition>GLFWAPI GLFWcharfun glfwSetCharCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcharfun cbfun)</argsstring>
        <name>glfwSetCharCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1gabf24451c7ceb1952bc02b17a0d5c3e5f" kindref="member">GLFWcharfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the Unicode character callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the character callback of the specified window, which is called when a Unicode character is input.</para><para>The character callback is intended for Unicode text input. As it deals with characters, it is keyboard layout dependent, whereas the <ref refid="group__input_1gaa73bb92f628a2a0be9c132d56f19362c" kindref="member">key callback</ref> is not. Characters do not map 1:1 to physical keys, as a key may produce zero, one or more characters. If you want to know whether a specific physical key was pressed or released, see the key callback instead.</para><para>The character callback behaves as system text input normally does and will not be called if modifier keys are held down that would prevent normal text input on that platform, for example a Super (Command) key on OS X or Alt key on Windows. There is a <ref refid="group__input_1gae6eee0bda7429bfe8028615847cf6795" kindref="member">character with modifiers callback</ref> that receives these events.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>input_char</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.4.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. Updated callback signature. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2774" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gae6eee0bda7429bfe8028615847cf6795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1gae36fb6897d2b7df9b128900c8ce9c507" kindref="member">GLFWcharmodsfun</ref></type>
        <definition>GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcharmodsfun cbfun)</argsstring>
        <name>glfwSetCharModsCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1gae36fb6897d2b7df9b128900c8ce9c507" kindref="member">GLFWcharmodsfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the Unicode character with modifiers callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the character with modifiers callback of the specified window, which is called when a Unicode character is input regardless of what modifier keys are used.</para><para>The character with modifiers callback is intended for implementing custom Unicode character input. For regular Unicode text input, see the <ref refid="group__input_1ga07b2959b23dc3e466ce7475746021002" kindref="member">character callback</ref>. Like the character callback, the character with modifiers callback deals with characters and is keyboard layout dependent. Characters do not map 1:1 to physical keys, as a key may produce zero, one or more characters. If you want to know whether a specific physical key was pressed or released, see the <ref refid="group__input_1gaa73bb92f628a2a0be9c132d56f19362c" kindref="member">key callback</ref> instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or an error occurred.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>input_char</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2806" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga20e5ba1ce4e086aedd48a06dc311c95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1ga39893a4a7e7c3239c98d29c9e084350c" kindref="member">GLFWmousebuttonfun</ref></type>
        <definition>GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWmousebuttonfun cbfun)</argsstring>
        <name>glfwSetMouseButtonCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga39893a4a7e7c3239c98d29c9e084350c" kindref="member">GLFWmousebuttonfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the mouse button callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the mouse button callback of the specified window, which is called when a mouse button is pressed or released.</para><para>When a window loses input focus, it will generate synthetic mouse button release events for all pressed mouse buttons. You can tell these events from user-generated events by the fact that the synthetic ones are generated after the focus loss event has been processed, i.e. after the <ref refid="group__window_1gac89c6534ba7fbab6f6c68b855656c0d4" kindref="member">window focus callback</ref> has been called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>input_mouse_button</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. Updated callback signature. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2837" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga9c49c0d3d3c775c3124726f1d902124d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1ga4cfad918fa836f09541e7b9acd36686c" kindref="member">GLFWcursorposfun</ref></type>
        <definition>GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcursorposfun cbfun)</argsstring>
        <name>glfwSetCursorPosCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga4cfad918fa836f09541e7b9acd36686c" kindref="member">GLFWcursorposfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the cursor position callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the cursor position callback of the specified window, which is called when the cursor is moved. The callback is provided with the position, in screen coordinates, relative to the upper-left corner of the client area of the window.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_pos</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwSetMousePosCallback</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2861" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaa20014985561efeb2c53f1956f727830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1ga51ab436c41eeaed6db5a0c9403b1c840" kindref="member">GLFWcursorenterfun</ref></type>
        <definition>GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWcursorenterfun cbfun)</argsstring>
        <name>glfwSetCursorEnterCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga51ab436c41eeaed6db5a0c9403b1c840" kindref="member">GLFWcursorenterfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the cursor enter/exit callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the cursor boundary crossing callback of the specified window, which is called when the cursor enters or leaves the client area of the window.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>cursor_enter</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2884" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga29011514e93368712a3063a28707ced3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1ga4687e2199c60a18a8dd1da532e6d75c9" kindref="member">GLFWscrollfun</ref></type>
        <definition>GLFWAPI GLFWscrollfun glfwSetScrollCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWscrollfun cbfun)</argsstring>
        <name>glfwSetScrollCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1ga4687e2199c60a18a8dd1da532e6d75c9" kindref="member">GLFWscrollfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the scroll callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the scroll callback of the specified window, which is called when a scrolling device is used, such as a mouse wheel or scrolling area of a touchpad.</para><para>The scroll callback receives all scrolling input, like that from a mouse wheel or a touchpad scrolling area.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new scroll callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>scrolling</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwSetMouseWheelCallback</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2910" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gad4fc40df63a5d0441ab06de9a585cc04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__input_1gab71f4ca80b651462852e601caf308c4a" kindref="member">GLFWdropfun</ref></type>
        <definition>GLFWAPI GLFWdropfun glfwSetDropCallback</definition>
        <argsstring>(GLFWwindow *window, GLFWdropfun cbfun)</argsstring>
        <name>glfwSetDropCallback</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="group__input_1gab71f4ca80b651462852e601caf308c4a" kindref="member">GLFWdropfun</ref></type>
          <declname>cbfun</declname>
        </param>
        <briefdescription>
<para>Sets the file drop callback. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the file drop callback of the specified window, which is called when one or more dragged files are dropped on the window.</para><para>Because the path array and its strings may have been generated specifically for that event, they are not guaranteed to be valid after the callback has returned. If you wish to use them after the callback returns, you need to make a deep copy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose callback to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbfun</parametername>
</parameternamelist>
<parameterdescription>
<para>The new file drop callback, or <computeroutput>NULL</computeroutput> to remove the currently set callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The previously set callback, or <computeroutput>NULL</computeroutput> if no callback was set or the library had not been initialized.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>path_drop</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2937" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga7f81f22f355f4b7d315caf73cdfd9906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwJoystickPresent</definition>
        <argsstring>(int joy)</argsstring>
        <name>glfwJoystickPresent</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>joy</declname>
        </param>
        <briefdescription>
<para>Returns whether the specified joystick is present. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns whether the specified joystick is present.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GL_TRUE</computeroutput> if the joystick is present, or <computeroutput>GL_FALSE</computeroutput> otherwise.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>joystick</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwGetJoystickParam</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2955" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gaab9e573d808b088c5079c0f577d39448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const float *</type>
        <definition>GLFWAPI const float* glfwGetJoystickAxes</definition>
        <argsstring>(int joy, int *count)</argsstring>
        <name>glfwGetJoystickAxes</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>joy</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the values of all axes of the specified joystick. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the values of all axes of the specified joystick. Each element in the array is a value between -1.0 and 1.0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of axis values in the returned array. This is set to zero if an error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of axis values, or <computeroutput>NULL</computeroutput> if the joystick is not present.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, this function is called again for that joystick or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>joystick_axis</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. Replaces <computeroutput>glfwGetJoystickPos</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="2981" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga3951bea72b5fb4870b1aa0e5c2e9c903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const unsigned char *</type>
        <definition>GLFWAPI const unsigned char* glfwGetJoystickButtons</definition>
        <argsstring>(int joy, int *count)</argsstring>
        <name>glfwGetJoystickButtons</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>joy</declname>
        </param>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref> *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns the state of all buttons of the specified joystick. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the state of all buttons of the specified joystick. Each element in the array is either <computeroutput>GLFW_PRESS</computeroutput> or <computeroutput>GLFW_RELEASE</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the number of button states in the returned array. This is set to zero if an error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of button states, or <computeroutput>NULL</computeroutput> if the joystick is not present.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned array is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, this function is called again for that joystick or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>joystick_button</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.2.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Changed to return a dynamic array. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3010" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1gac50a4fd9b01886cf9fa2c45f19191fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const char *</type>
        <definition>GLFWAPI const char* glfwGetJoystickName</definition>
        <argsstring>(int joy)</argsstring>
        <name>glfwGetJoystickName</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>joy</declname>
        </param>
        <briefdescription>
<para>Returns the name of the specified joystick. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the name, encoded as UTF-8, of the specified joystick. The returned string is allocated and freed by GLFW. You should not free it yourself.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">joy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__joysticks" kindref="compound">joystick</ref> to query. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UTF-8 encoded name of the joystick, or <computeroutput>NULL</computeroutput> if the joystick is not present.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the specified joystick is disconnected, this function is called again for that joystick or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>joystick_name</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3036" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga7a580309bbc185a0459c3559021d2fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetClipboardString</definition>
        <argsstring>(GLFWwindow *window, const char *string)</argsstring>
        <name>glfwSetClipboardString</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Sets the clipboard to the specified string. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the system clipboard to the specified, UTF-8 encoded string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that will own the clipboard contents. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>A UTF-8 encoded string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The specified string is copied before this function returns.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>clipboard </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga3ac90c8bbaf0b46063bb02b574f3b6f7" kindref="member">glfwGetClipboardString</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3059" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga3ac90c8bbaf0b46063bb02b574f3b6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> const char *</type>
        <definition>GLFWAPI const char* glfwGetClipboardString</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwGetClipboardString</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the contents of the clipboard as a string. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the contents of the system clipboard, if it contains or is convertible to a UTF-8 encoded string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that will request the clipboard contents. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The contents of the clipboard as a UTF-8 encoded string, or <computeroutput>NULL</computeroutput> if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned string is allocated and freed by GLFW. You should not free it yourself. It is valid until the next call to <ref refid="group__input_1ga3ac90c8bbaf0b46063bb02b574f3b6f7" kindref="member">glfwGetClipboardString</ref> or <ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref>, or until the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>clipboard </para></simplesect>
<simplesect kind="see"><para><ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3086" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> double</type>
        <definition>GLFWAPI double glfwGetTime</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetTime</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Returns the value of the GLFW timer. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the value of the GLFW timer. Unless the timer has been set using <ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref>, the timer measures time elapsed since GLFW was initialized.</para><para>The resolution of the timer is system dependent, but is usually on the order of a few micro- or nanoseconds. It uses the highest-resolution monotonic time source on each supported platform.</para><para><simplesect kind="return"><para>The current value, in seconds, or zero if an error occurred.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread. Access is not synchronized.</para></simplesect>
<simplesect kind="see"><para>time</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__input_1ga94360a3628a09f32708f83cc3fa48590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSetTime</definition>
        <argsstring>(double time)</argsstring>
        <name>glfwSetTime</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Sets the GLFW timer. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the value of the GLFW timer. It then continues to count up from that value. The value must be a positive finite number less than or equal to 18446744073.0, which is approximately 584.5 years.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value, in seconds.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>The upper limit of the timer is calculated as floor((2<superscript>64</superscript> - 1) / 10<superscript>9</superscript>) and is due to implementations storing nanoseconds in 64 bits. The limit may be increased in the future.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may only be called from the main thread.</para></simplesect>
<simplesect kind="see"><para>time</para></simplesect>
<simplesect kind="since"><para>Added in GLFW 2.2. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1gafd76c93e15ec8b0b90506a9936a46185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwMakeContextCurrent</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwMakeContextCurrent</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Makes the context of the specified window current for the calling thread. </para>        </briefdescription>
        <detaileddescription>
<para>This function makes the OpenGL or OpenGL ES context of the specified window current on the calling thread. A context can only be made current on a single thread at a time and each thread can have only a single current context at a time.</para><para>By default, making a context non-current implicitly forces a pipeline flush. On machines that support <computeroutput>GL_KHR_context_flush_control</computeroutput>, you can control whether a context performs this flush by setting the GLFW_CONTEXT_RELEASE_BEHAVIOR window hint.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose context to make current, or <computeroutput>NULL</computeroutput> to detach the current context.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_current </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gac28d98c655377d81a516bf5ef90780c8" kindref="member">glfwGetCurrentContext</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1gac28d98c655377d81a516bf5ef90780c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
        <definition>GLFWAPI GLFWwindow* glfwGetCurrentContext</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetCurrentContext</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Returns the window whose context is current on the calling thread. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the window whose OpenGL or OpenGL ES context is current on the calling thread.</para><para><simplesect kind="return"><para>The window whose context is current, or <computeroutput>NULL</computeroutput> if no window&apos;s context is current.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_current </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__window_1gafb827800eedbfcbc97b1e5408df668d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSwapBuffers</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwSwapBuffers</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Swaps the front and back buffers of the specified window. </para>        </briefdescription>
        <detaileddescription>
<para>This function swaps the front and back buffers of the specified window. If the swap interval is greater than zero, the GPU driver waits the specified number of screen updates before swapping the buffers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose buffers to swap.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>buffer_swap </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0.</para></simplesect>
<simplesect kind="par"><title></title><para><bold>GLFW 3:</bold> Added window handle parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga12a595c06947cec4967c6e1f14210a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSwapInterval</definition>
        <argsstring>(int interval)</argsstring>
        <name>glfwSwapInterval</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>Sets the swap interval for the current context. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the swap interval for the current context, i.e. the number of screen updates to wait from the time <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref> was called before swapping the buffers and returning. This is sometimes called <emphasis>vertical synchronization</emphasis>, <emphasis>vertical retrace synchronization</emphasis> or just <emphasis>vsync</emphasis>.</para><para>Contexts that support either of the <computeroutput>WGL_EXT_swap_control_tear</computeroutput> and <computeroutput>GLX_EXT_swap_control_tear</computeroutput> extensions also accept negative swap intervals, which allow the driver to swap even if a frame arrives a little bit late. You can check for the presence of these extensions using <ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref>. For more information about swap tearing, see the extension specifications.</para><para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">interval</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum number of screen updates to wait for until the buffers are swapped by <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This function is not called during context creation, leaving the swap interval set to whatever is the default on that platform. This is done because some swap interval extensions used by GLFW do not allow the swap interval to be reset to zero once it has been set to a non-zero value.</para></simplesect>
<simplesect kind="remark"><para>Some GPU drivers do not honor the requested swap interval, either because of a user setting that overrides the application&apos;s request or due to bugs in the driver.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>buffer_swap </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwExtensionSupported</definition>
        <argsstring>(const char *extension)</argsstring>
        <name>glfwExtensionSupported</name>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
<para>Returns whether the specified extension is available. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns whether the specified client API extension is supported by the current OpenGL or OpenGL ES context. It searches both for OpenGL and OpenGL ES extension and platform-specific context creation API extensions.</para><para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para><para>As this functions retrieves and searches one or more extension strings each call, it is recommended that you cache its results if it is going to be used frequently. The extension strings will not change during the lifetime of a context, so there is no danger in doing this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">extension</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the extension. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GL_TRUE</computeroutput> if the extension is available, or <computeroutput>GL_FALSE</computeroutput> otherwise.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_glext </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga0e8af175218929615c16e74938c10f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" kindref="member">GLFWglproc</ref></type>
        <definition>GLFWAPI GLFWglproc glfwGetProcAddress</definition>
        <argsstring>(const char *procname)</argsstring>
        <name>glfwGetProcAddress</name>
        <param>
          <type>const char *</type>
          <declname>procname</declname>
        </param>
        <briefdescription>
<para>Returns the address of the specified function for the current context. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the address of the specified core or extension function, if it is supported by the current context.</para><para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">procname</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The address of the function, or <computeroutput>NULL</computeroutput> if the function is unavailable or an error occurred.</para></simplesect>
<simplesect kind="remark"><para>The addresses of a given function is not guaranteed to be the same between contexts.</para></simplesect>
<simplesect kind="remark"><para>This function may return a non-<computeroutput>NULL</computeroutput> address despite the associated version or extension not being available. Always check the context version or extension string presence first.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned function pointer is valid until the context is destroyed or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_glext </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3313" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>3.1<sp/>-<sp/>www.glfw.org</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>A<sp/>library<sp/>for<sp/>OpenGL,<sp/>window<sp/>and<sp/>input</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2002-2006<sp/>Marcus<sp/>Geelnard</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2006-2010<sp/>Camilla<sp/>Berglund<sp/>&lt;elmindreda@elmindreda.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_glfw3_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_glfw3_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Doxygen<sp/>documentation</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>Compiler-<sp/>and<sp/>platform-specific<sp/>preprocessor<sp/>work</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>we<sp/>on<sp/>Windows,<sp/>we<sp/>want<sp/>a<sp/>single<sp/>define<sp/>for<sp/>it.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_WIN32)<sp/>&amp;&amp;<sp/>(defined(__WIN32__)<sp/>||<sp/>defined(WIN32)<sp/>||<sp/>defined(__MINGW32__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>customary<sp/>to<sp/>use<sp/>APIENTRY<sp/>for<sp/>OpenGL<sp/>function<sp/>pointer<sp/>declarations<sp/>on</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>all<sp/>platforms.<sp/><sp/>Additionally,<sp/>the<sp/>Windows<sp/>OpenGL<sp/>header<sp/>needs<sp/>APIENTRY.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>APIENTRY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>APIENTRY<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="glfw3_8h_1a428a91acf2c2439dc1a257708ee1f805" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>APIENTRY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>APIENTRY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>Windows<sp/>OpenGL<sp/>headers<sp/>need<sp/>this.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WINGDIAPI)<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>WINGDIAPI<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFW_WINGDIAPI_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>WINGDIAPI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>Windows<sp/>GLU<sp/>headers<sp/>need<sp/>this.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CALLBACK)<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CALLBACK<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFW_CALLBACK_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CALLBACK<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Most<sp/>Windows<sp/>GLU<sp/>headers<sp/>need<sp/>wchar_t.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>The<sp/>OS<sp/>X<sp/>OpenGL<sp/>header<sp/>blocks<sp/>the<sp/>definition<sp/>of<sp/>ptrdiff_t<sp/>by<sp/>glext.h.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(GLFW_INCLUDE_NONE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>the<sp/>chosen<sp/>client<sp/>API<sp/>headers.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE_CC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLCOREARB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;OpenGL/gl3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;OpenGL/gl3ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#elif<sp/>!defined(GLFW_INCLUDE_NONE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>!defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>GL_GLEXT_LEGACY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;OpenGL/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;OpenGL/glu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLCOREARB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GL/glcorearb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#elif<sp/>defined(GLFW_INCLUDE_ES1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;GLES/glext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#elif<sp/>defined(GLFW_INCLUDE_ES2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES2/gl2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;GLES2/gl2ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#elif<sp/>defined(GLFW_INCLUDE_ES3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES3/gl3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;GLES3/gl2ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#elif<sp/>defined(GLFW_INCLUDE_ES31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GLES3/gl31.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;GLES3/gl2ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#elif<sp/>!defined(GLFW_INCLUDE_NONE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GL/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(GLFW_INCLUDE_GLEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;GL/glext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>defined(GLFW_INCLUDE_GLU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;GL/glu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GLFW_DLL)<sp/>&amp;&amp;<sp/>defined(_GLFW_BUILD_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>GLFW_DLL<sp/>must<sp/>be<sp/>defined<sp/>by<sp/>applications<sp/>that<sp/>are<sp/>linking<sp/>against<sp/>the<sp/>DLL</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/>*<sp/>version<sp/>of<sp/>the<sp/>GLFW<sp/>library.<sp/><sp/>_GLFW_BUILD_DLL<sp/>is<sp/>defined<sp/>by<sp/>the<sp/>GLFW</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/>*<sp/>configuration<sp/>header<sp/>when<sp/>compiling<sp/>the<sp/>DLL<sp/>version<sp/>of<sp/>the<sp/>library.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#error<sp/>&quot;You<sp/>may<sp/>not<sp/>have<sp/>both<sp/>GLFW_DLL<sp/>and<sp/>_GLFW_BUILD_DLL<sp/>defined&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GLFWAPI<sp/>is<sp/>used<sp/>to<sp/>declare<sp/>public<sp/>API<sp/>functions<sp/>for<sp/>export</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>from<sp/>the<sp/>DLL<sp/>/<sp/>shared<sp/>library<sp/>/<sp/>dynamic<sp/>library.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_GLFW_BUILD_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>building<sp/>GLFW<sp/>as<sp/>a<sp/>Win32<sp/>DLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(GLFW_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>calling<sp/>GLFW<sp/>as<sp/>a<sp/>Win32<sp/>DLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(_GLFW_BUILD_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>building<sp/>GLFW<sp/>as<sp/>a<sp/>shared<sp/>/<sp/>dynamic<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>building<sp/>or<sp/>calling<sp/>GLFW<sp/>as<sp/>a<sp/>static<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>GLFWAPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>API<sp/>tokens</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group__init_1ga6337d9ea43b22fc529b2bba066b4a576" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_VERSION_MAJOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group__init_1gaf80d40f0aea7088ff337606e9c48f7a3" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_VERSION_MINOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="group__init_1gab72ae2e2035d9ea461abc3495eac0502" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_VERSION_REVISION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group__input_1gada11d965c4da13090ad336e030e4d11f" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_RELEASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="group__input_1ga2485743d0b59df3791c45951c4195265" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_PRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="group__input_1gac96fd3b9fc66c6f0eebaf6532595338f" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_REPEAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="comment">/*<sp/>The<sp/>unknown<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group__keys_1ga99aacc875b6b27a072552631e13775c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_UNKNOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Printable<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group__keys_1gaddb2c23772b97fd7e26e8ee66f1ad014" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SPACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="group__keys_1ga6059b0b048ba6980b6107fffbd3b4b24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_APOSTROPHE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>39<sp/><sp/></highlight><highlight class="comment">/*<sp/>&apos;<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="group__keys_1gab3d5d72e59d3055f494627b0a524926c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_COMMA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>44<sp/><sp/></highlight><highlight class="comment">/*<sp/>,<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="group__keys_1gac556b360f7f6fca4b70ba0aecf313fd4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_MINUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>45<sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="group__keys_1ga37e296b650eab419fc474ff69033d927" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PERIOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>46<sp/><sp/></highlight><highlight class="comment">/*<sp/>.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group__keys_1gadf3d753b2d479148d711de34b83fd0db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SLASH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>47<sp/><sp/></highlight><highlight class="comment">/*<sp/>/<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="group__keys_1ga50391730e9d7112ad4fd42d0bd1597c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="group__keys_1ga05e4cae9ddb8d40cf6d82c8f11f2502f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>49</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="group__keys_1gadc8e66b3a4c4b5c39ad1305cf852863c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="group__keys_1ga812f0273fe1a981e1fa002ae73e92271" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>51</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="group__keys_1ga9e14b6975a9cc8f66cdd5cb3d3861356" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>52</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="group__keys_1ga4d74ddaa5d4c609993b4d4a15736c924" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>53</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="group__keys_1ga9ea4ab80c313a227b14d0a7c6f810b5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>54</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group__keys_1gab79b1cfae7bd630cfc4604c1f263c666" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group__keys_1gadeaa109a0f9f5afc94fe4a108e686f6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>56</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="group__keys_1ga2924cb5349ebbf97c8987f3521c44f39" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>57</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="group__keys_1ga84233de9ee5bb3e8788a5aa07d80af7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SEMICOLON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>59<sp/><sp/></highlight><highlight class="comment">/*<sp/>;<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="group__keys_1gae1a2de47240d6664423c204bdd91bd17" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_EQUAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>61<sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="group__keys_1ga03e842608e1ea323370889d33b8f70ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_A<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__keys_1ga8e3fb647ff3aca9e8dbf14fe66332941" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_B<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>66</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="group__keys_1ga00ccf3475d9ee2e679480d540d554669" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>67</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group__keys_1ga011f7cdc9a654da984a2506479606933" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>68</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="group__keys_1gabf48fcc3afbe69349df432b470c96ef2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_E<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>69</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="group__keys_1ga5df402e02aca08444240058fd9b42a55" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="group__keys_1gae74ecddf7cc96104ab23989b1cdab536" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_G<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>71</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="group__keys_1gad4cc98fc8f35f015d9e2fb94bf136076" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>72</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="group__keys_1ga274655c8bfe39742684ca393cf8ed093" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>73</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="group__keys_1ga65ff2aedb129a3149ad9cb3e4159a75f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_J<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>74</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="group__keys_1ga4ae8debadf6d2a691badae0b53ea3ba0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_K<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>75</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="group__keys_1gaaa8b54a13f6b1eed85ac86f82d550db2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>76</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group__keys_1ga4d7f0260c82e4ea3d6ebc7a21d6e3716" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_M<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>77</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="group__keys_1gae00856dfeb5d13aafebf59d44de5cdda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>78</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="group__keys_1gaecbbb79130df419d58dd7f09a169efe9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_O<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>79</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="group__keys_1ga8fc15819c1094fb2afa01d84546b33e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_P<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group__keys_1gafdd01e38b120d67cf51e348bb47f3964" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_Q<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group__keys_1ga4ce6c70a0c98c50b3fe4ab9a728d4d36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>82</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="group__keys_1ga1570e2ccaab036ea82bed66fc1dab2a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_S<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>83</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="group__keys_1ga90e0560422ec7a30e7f3f375bc9f37f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>84</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="group__keys_1gacad52f3bf7d378fc0ffa72a76769256d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>85</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="group__keys_1ga22c7763899ecf7788862e5f90eacce6b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_V<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>86</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group__keys_1gaa06a712e6202661fc03da5bdb7b6e545" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>87</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="group__keys_1gac1c42c0bf4192cea713c55598b06b744" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>88</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="group__keys_1gafd9f115a549effdf8e372a787c360313" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>89</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group__keys_1gac489e208c26afda8d4938ed88718760a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_Z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>90</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="group__keys_1gad1c8d9adac53925276ecb1d592511d8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_BRACKET<sp/><sp/><sp/><sp/><sp/><sp/><sp/>91<sp/><sp/></highlight><highlight class="comment">/*<sp/>[<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group__keys_1gab8155ea99d1ab27ff56f24f8dc73f8d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_BACKSLASH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>92<sp/><sp/></highlight><highlight class="comment">/*<sp/>\<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group__keys_1ga86ef225fd6a66404caae71044cdd58d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_BRACKET<sp/><sp/><sp/><sp/><sp/><sp/>93<sp/><sp/></highlight><highlight class="comment">/*<sp/>]<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="group__keys_1ga7a3701fb4e2a0b136ff4b568c3c8d668" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_GRAVE_ACCENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>96<sp/><sp/></highlight><highlight class="comment">/*<sp/>`<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group__keys_1gadc78dad3dab76bcd4b5c20114052577a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_WORLD_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>161<sp/></highlight><highlight class="comment">/*<sp/>non-US<sp/>#1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="group__keys_1ga20494bfebf0bb4fc9503afca18ab2c5e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_WORLD_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>162<sp/></highlight><highlight class="comment">/*<sp/>non-US<sp/>#2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="group__keys_1gaac6596c350b635c245113b81c2123b93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_ESCAPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="group__keys_1ga9555a92ecbecdbc1f3435219c571d667" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_ENTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>257</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="group__keys_1ga6908a4bda9950a3e2b73f794bbe985df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_TAB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>258</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="group__keys_1ga6c0df1fe2f156bbd5a98c66d76ff3635" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_BACKSPACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>259</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__keys_1ga373ac7365435d6b0eb1068f470e34f47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_INSERT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>260</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="group__keys_1gadb111e4df74b8a715f2c05dad58d2682" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_DELETE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>261</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group__keys_1ga06ba07662e8c291a4a84535379ffc7ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>262</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group__keys_1gae12a010d33c309a67ab9460c51eb2462" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>263</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="group__keys_1gae2e3958c71595607416aa7bf082be2f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>264</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="group__keys_1ga2f3342b194020d3544c67e3506b6f144" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>265</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group__keys_1ga3ab731f9622f0db280178a5f3cc6d586" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PAGE_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>266</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="group__keys_1gaee0a8fa442001cc2147812f84b59041c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PAGE_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>267</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="group__keys_1ga41452c7287195d481e43207318c126a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_HOME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>268</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="group__keys_1ga86587ea1df19a65978d3e3b8439bedd9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>269</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="group__keys_1ga92c1d2c9d63485f3d70f94f688d48672" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_CAPS_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>280</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group__keys_1gaf622b63b9537f7084c2ab649b8365630" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_SCROLL_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>281</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="group__keys_1ga3946edc362aeff213b2be6304296cf43" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_NUM_LOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>282</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="group__keys_1gaf964c2e65e97d0cf785a5636ee8df642" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PRINT_SCREEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>283</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="group__keys_1ga8116b9692d87382afb5849b6d8907f18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_PAUSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>284</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="group__keys_1gafb8d66c573acf22e364049477dcbea30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>290</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group__keys_1ga0900750aff94889b940f5e428c07daee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>291</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="group__keys_1gaed7cd729c0147a551bb8b7bb36c17015" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>292</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="group__keys_1ga9b61ebd0c63b44b7332fda2c9763eaa6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>293</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="group__keys_1gaf258dda9947daa428377938ed577c8c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>294</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="group__keys_1ga6dc2d3f87b9d51ffbbbe2ef0299d8e1d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>295</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__keys_1gacca6ef8a2162c52a0ac1d881e8d9c38a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>296</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="group__keys_1gac9d39390336ae14e4a93e295de43c7e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>297</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="group__keys_1gae40de0de1c9f21cd26c9afa3d7050851" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>298</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="group__keys_1ga718d11d2f7d57471a2f6a894235995b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>299</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="group__keys_1ga0bc04b11627e7d69339151e7306b2832" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__keys_1gaf5908fa9b0a906ae03fc2c61ac7aa3e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>301</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group__keys_1gad637f4308655e1001bd6ad942bc0fd4b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F13<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>302</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="group__keys_1gaf14c66cff3396e5bd46e803c035e6c1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>303</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="group__keys_1ga7f70970db6e8be1794da8516a6d14058" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>304</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="group__keys_1gaa582dbb1d2ba2050aa1dca0838095b27" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>305</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="group__keys_1ga972ce5c365e2394b36104b0e3125c748" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F17<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>306</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="group__keys_1gaebf6391058d5566601e357edc5ea737c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F18<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>307</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="group__keys_1gaec011d9ba044058cb54529da710e9791" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F19<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>308</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="group__keys_1ga82b9c721ada04cd5ca8de767da38022f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F20<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>309</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="group__keys_1ga356afb14d3440ff2bb378f74f7ebc60f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F21<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>310</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="group__keys_1ga90960bd2a155f2b09675324d3dff1565" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F22<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>311</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="group__keys_1ga43c21099aac10952d1be909a8ddee4d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F23<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>312</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="group__keys_1ga8150374677b5bed3043408732152dea2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F24<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>313</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="group__keys_1gaa4bbd93ed73bb4c6ae7d83df880b7199" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_F25<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>314</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="group__keys_1ga10515dafc55b71e7683f5b4fedd1c70d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>320</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="group__keys_1gaf3a29a334402c5eaf0b3439edf5587c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>321</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="group__keys_1gaf82d5a802ab8213c72653d7480c16f13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>322</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="group__keys_1ga7e25ff30d56cd512828c1d4ae8d54ef2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>323</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="group__keys_1gada7ec86778b85e0b4de0beea72234aea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>324</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="group__keys_1ga9a5be274434866c51738cafbb6d26b45" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>325</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="group__keys_1gafc141b0f8450519084c01092a3157faa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>326</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="group__keys_1ga8882f411f05d04ec77a9563974bbfa53" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>327</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="group__keys_1gab2ea2e6a12f89d315045af520ac78cec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>328</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="group__keys_1gafb21426b630ed4fcc084868699ba74c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>329</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="group__keys_1ga4e231d968796331a9ea0dbfb98d4005b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_DECIMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>330</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="group__keys_1gabca1733780a273d549129ad0f250d1e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_DIVIDE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>331</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="group__keys_1ga9ada267eb0e78ed2ada8701dd24a56ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_MULTIPLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>332</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="group__keys_1gaa3dbd60782ff93d6082a124bce1fa236" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_SUBTRACT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>333</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="group__keys_1gad09c7c98acc79e89aa6a0a91275becac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_ADD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>334</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group__keys_1ga4f728f8738f2986bd63eedd3d412e8cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_ENTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>335</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="group__keys_1gaebdc76d4a808191e6d21b7e4ad2acd97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_KP_EQUAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>336</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="group__keys_1ga8a530a28a65c44ab5d00b759b756d3f6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>340</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="group__keys_1ga9f97b743e81460ac4b2deddecd10a464" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="group__keys_1ga7f27dabf63a7789daa31e1c96790219b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_ALT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>342</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="group__keys_1gafb1207c91997fc295afd1835fbc5641a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LEFT_SUPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>343</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="group__keys_1gaffca36b99c9dce1a19cb9befbadce691" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>344</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="group__keys_1gad1ca2094b2694e7251d0ab1fd34f8519" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/>345</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="group__keys_1ga687b38009131cfdd07a8d05fff8fa446" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_ALT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>346</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="group__keys_1gad4547a3e8e247594acb60423fe6502db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_RIGHT_SUPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>347</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="group__keys_1ga9845be48a745fc232045c9ec174d8820" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_MENU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>348</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_KEY_LAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_KEY_MENU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="group__mods_1ga14994d3196c290aaa347248e51740274" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_MOD_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="group__mods_1ga6ed94871c3208eefd85713fa929d45aa" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_MOD_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="group__mods_1gad2acd5633463c29e07008687ea73c0f4" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_MOD_ALT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="group__mods_1ga6b64ba10ea0227cf6f42efd0a220aba1" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_MOD_SUPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="group__buttons_1ga181a6e875251fd8671654eff00f9112e" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="group__buttons_1ga604b39b92c88ce9bd332e97fc3f4156c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="group__buttons_1ga0130d505563d0236a6f85545f19e1721" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="group__buttons_1ga53f4097bb01d5521c7d9513418c91ca9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="group__buttons_1gaf08c4ddecb051d3d9667db1d5e417c9c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="group__buttons_1gae8513e06aab8aa393b595f22c6d8257a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="group__buttons_1ga8b02a1ab55dde45b3a3883d54ffd7dc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="group__buttons_1ga35d5c4263e0dc0d0a4731ca6c562f32c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="group__buttons_1gab1fd86a4518a9141ec7bcde2e15a2fdf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_LAST<sp/><sp/><sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="group__buttons_1gaf37100431dcd5082d48f95ee8bc8cd56" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_LEFT<sp/><sp/><sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="group__buttons_1ga3e2f2cf3c4942df73cc094247d275e74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_RIGHT<sp/><sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="group__buttons_1ga34a4d2a701434f763fd93a2ff842b95a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_MOUSE_BUTTON_MIDDLE<sp/><sp/><sp/><sp/>GLFW_MOUSE_BUTTON_3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="group__joysticks_1ga34a0443d059e9f22272cd4669073f73d" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="group__joysticks_1ga6eab65ec88e65e0850ef8413504cb50c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="group__joysticks_1gae6f3eedfeb42424c2f5e3161efb0b654" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="group__joysticks_1ga97ddbcad02b7f48d74fad4ddb08fff59" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="group__joysticks_1gae43281bc66d3fa5089fb50c3e7a28695" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="group__joysticks_1ga74771620aa53bd68a487186dea66fd77" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="group__joysticks_1ga20a9f4f3aaefed9ea5e66072fc588b87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="group__joysticks_1ga21a934c940bcf25db0e4c8fe9b364bdb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="group__joysticks_1ga87689d47df0ba6f9f5fcbbcaf7b3cecf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="group__joysticks_1gaef55389ee605d6dfc31aef6fe98c54ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="group__joysticks_1gae7d26e3df447c2c14a569fcc18516af4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="group__joysticks_1gab91bbf5b7ca6be8d3ac5c4d89ff48ac7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="group__joysticks_1ga5c84fb4e49bf661d7d7c78eb4018c508" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_13<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="group__joysticks_1ga89540873278ae5a42b3e70d64164dc74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="group__joysticks_1ga7b02ab70daf7a78bcc942d5d4cc1dcf9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="group__joysticks_1ga453edeeabf350827646b6857df4f80ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="group__joysticks_1ga9ca13ebf24c331dd98df17d84a4b72c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_JOYSTICK_LAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_JOYSTICK_16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="group__errors_1ga2374ee02c177f12e1fa76ff3ed15e14a" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_NOT_INITIALIZED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_NO_CURRENT_CONTEXT<sp/><sp/><sp/><sp/><sp/>0x00010002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="group__errors_1ga76f6bb9c4eea73db675f096b404593ce" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_INVALID_ENUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_INVALID_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="group__errors_1ga9023953a2bcb98c2906afd071d21ee7f" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_OUT_OF_MEMORY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="group__errors_1ga56882b290db23261cc6c053c40c2d08e" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_API_UNAVAILABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_VERSION_UNAVAILABLE<sp/><sp/><sp/><sp/>0x00010007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="group__errors_1gad44162d78100ea5e87cdd38426b8c7a1" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_PLATFORM_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="group__errors_1ga196e125ef261d94184e2b55c05762f14" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_FORMAT_UNAVAILABLE<sp/><sp/><sp/><sp/><sp/>0x00010009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="glfw3_8h_1a54ddb14825a1541a56e22afb5f832a9e" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_FOCUSED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="glfw3_8h_1a39d44b7c056e55e581355a92d240b58a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ICONIFIED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="glfw3_8h_1adba13c7a1b3aa40831eb2beedbd5bd1d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RESIZABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="glfw3_8h_1afb3cdc45297e06d8f1eb13adc69ca6c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="glfw3_8h_1a21b854d36314c94d65aed84405b2f25e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DECORATED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="glfw3_8h_1a9d9874fc928200136a6dcdad726aa252" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_AUTO_ICONIFY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="glfw3_8h_1a7fb0be51407783b41adbf5bec0b09d80" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_FLOATING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="glfw3_8h_1af78ed8e417dbcc1e354906cc2708c982" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RED_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="glfw3_8h_1afba3b72638c914e5fb8a237dd4c50d4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_GREEN_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="glfw3_8h_1ab292ea403db6d514537b515311bf9ae3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_BLUE_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="glfw3_8h_1afed79a3f468997877da86c449bd43e8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ALPHA_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="glfw3_8h_1a318a55eac1fee57dfe593b6d38149d07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DEPTH_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="glfw3_8h_1a5339890a45a1fb38e93cb9fcc5fd069d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STENCIL_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="glfw3_8h_1aead34a9a683b2bc20eecf30ba738bfc6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_RED_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="glfw3_8h_1a65713cee1326f8e9d806fdf93187b471" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_GREEN_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="glfw3_8h_1a22bbe9104a8ce1f8b88fb4f186aa36ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_BLUE_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="glfw3_8h_1ae829b55591c18169a40ab4067a041b1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ACCUM_ALPHA_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="glfw3_8h_1ab05108c5029443b371112b031d1fa174" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_AUX_BUFFERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="glfw3_8h_1a83d991efca02537e2d69969135b77b03" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STEREO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="glfw3_8h_1a2cdf86fdcb7722fb8829c4e201607535" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_SAMPLES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="glfw3_8h_1a444a8f00414a63220591f9fdb7b5642b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_SRGB_CAPABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="glfw3_8h_1a0f20825e6e47ee8ba389024519682212" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_REFRESH_RATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0002100F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="glfw3_8h_1a714a5d569e8a274ea58fdfa020955339" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DOUBLEBUFFER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00021010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="glfw3_8h_1a649309cf72a3d3de5b1348ca7936c95b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CLIENT_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00022001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="glfw3_8h_1afe5e4922de1f9932d7e9849bb053b0c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_VERSION_MAJOR<sp/><sp/>0x00022002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="glfw3_8h_1a31aca791e4b538c4e4a771eb95cc2d07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_VERSION_MINOR<sp/><sp/>0x00022003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="glfw3_8h_1afb9475071aa77c6fb05ca5a5c8678a08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_REVISION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00022004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="glfw3_8h_1ade3593916b4c507900aa2d6844810e00" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_ROBUSTNESS<sp/><sp/><sp/><sp/><sp/>0x00022005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="glfw3_8h_1a13d24b12465da8b28985f46c8557925b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_FORWARD_COMPAT<sp/><sp/>0x00022006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="glfw3_8h_1a87ec2df0b915201e950ca42d5d0831e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_DEBUG_CONTEXT<sp/><sp/><sp/>0x00022007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="glfw3_8h_1a44f3a6b4261fbe351e0b950b0f372e12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_PROFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00022008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="glfw3_8h_1a72b648a8378fe3310c7c7bbecc0f7be6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CONTEXT_RELEASE_BEHAVIOR<sp/>0x00022009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="glfw3_8h_1a01b3f66db266341425e9abee6b257db2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00030001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="glfw3_8h_1a28d9b3bc6c2a522d815c8e146595051f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_ES_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00030002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="glfw3_8h_1a8b306cb27f5bb0d6d67c7356a0e0fc34" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_ROBUSTNESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="glfw3_8h_1aee84a679230d205005e22487ff678a85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_NO_RESET_NOTIFICATION<sp/><sp/>0x00031001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="glfw3_8h_1aec1132f245143fc915b2f0995228564c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_LOSE_CONTEXT_ON_RESET<sp/><sp/>0x00031002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="glfw3_8h_1ad6f2335d6f21cc9bab96633b1c111d5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_ANY_PROFILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="glfw3_8h_1af094bb16da76f66ebceb19ee213b3de8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_CORE_PROFILE<sp/><sp/><sp/><sp/>0x00032001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="glfw3_8h_1ac06b663d79c8fcf04669cc8fcc0b7670" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_OPENGL_COMPAT_PROFILE<sp/><sp/>0x00032002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="glfw3_8h_1aade31da5b884a84a7625c6b059b9132c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00033001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="glfw3_8h_1ae3bbe2315b7691ab088159eb6c9110fc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STICKY_KEYS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00033002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="glfw3_8h_1a4d7ce8ce71030c3b04e2b78145bc59d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_STICKY_MOUSE_BUTTONS<sp/><sp/><sp/>0x00033003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="glfw3_8h_1ae04dd25c8577e19fa8c97368561f6c68" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00034001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="glfw3_8h_1ac4d5cb9d78de8573349c58763d53bf11" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR_HIDDEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00034002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_CURSOR_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00034003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="glfw3_8h_1a6b47d806f285efe9bfd7aeec667297ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_ANY_RELEASE_BEHAVIOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="glfw3_8h_1a999961d391db49cb4f949c1dece0e13b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RELEASE_BEHAVIOR_FLUSH<sp/>0x00035001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="glfw3_8h_1afca09088eccacdce4b59036cfae349c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_RELEASE_BEHAVIOR_NONE<sp/><sp/>0x00035002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_ARROW_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="group__shapes_1ga36185f4375eaada1b04e431244774c86" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_IBEAM_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_CROSSHAIR_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="group__shapes_1ga1db35e20849e0837c82e3dc1fd797263" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_HAND_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="group__shapes_1gabb3eb0109f11bb808fc34659177ca962" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_HRESIZE_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="group__shapes_1gaf024f0e1ff8366fb2b5c260509a1fce5" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_VRESIZE_CURSOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00036006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="glfw3_8h_1abe11513fd1ffbee5bb9b173f06028b9e" refkind="member"><highlight class="preprocessor">#define<sp/>GLFW_CONNECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00040001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690" refid="glfw3_8h_1aab64b25921ef21d89252d6f0a71bfc32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DISCONNECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00040002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLFW_DONT_CARE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>API<sp/>types</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<ref refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" kindref="member">GLFWglproc</ref>)(<ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="714" refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref><sp/><ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref><sp/><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref><sp/><ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="group__init_1ga6b8a2639706d5c409fc1287e8f55e928" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__init_1ga6b8a2639706d5c409fc1287e8f55e928" kindref="member">GLFWerrorfun</ref>)(<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="group__window_1gafd8db81fdb0e850549dc6bace5ed697a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__window_1gafd8db81fdb0e850549dc6bace5ed697a" kindref="member">GLFWwindowposfun</ref>)(<ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref>*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="group__window_1gae49ee6ebc03fa2da024b89943a331355" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__window_1gae49ee6ebc03fa2da024b89943a331355" kindref="member">GLFWwindowsizefun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="group__window_1ga93e7c2555bd837f4ed8b20f76cada72e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__window_1ga93e7c2555bd837f4ed8b20f76cada72e" kindref="member">GLFWwindowclosefun</ref>)(GLFWwindow*);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="group__window_1ga7a56f9e0227e2cd9470d80d919032e08" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__window_1ga7a56f9e0227e2cd9470d80d919032e08" kindref="member">GLFWwindowrefreshfun</ref>)(GLFWwindow*);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="group__window_1ga58be2061828dd35080bb438405d3a7e2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__window_1ga58be2061828dd35080bb438405d3a7e2" kindref="member">GLFWwindowfocusfun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="group__window_1gad2d4e4c3d28b1242e742e8268b9528af" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__window_1gad2d4e4c3d28b1242e742e8268b9528af" kindref="member">GLFWwindowiconifyfun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="group__window_1ga3e218ef9ff826129c55a7d5f6971a285" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__window_1ga3e218ef9ff826129c55a7d5f6971a285" kindref="member">GLFWframebuffersizefun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="group__input_1ga39893a4a7e7c3239c98d29c9e084350c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1ga39893a4a7e7c3239c98d29c9e084350c" kindref="member">GLFWmousebuttonfun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="group__input_1ga4cfad918fa836f09541e7b9acd36686c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1ga4cfad918fa836f09541e7b9acd36686c" kindref="member">GLFWcursorposfun</ref>)(GLFWwindow*,double,double);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="886" refid="group__input_1ga51ab436c41eeaed6db5a0c9403b1c840" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1ga51ab436c41eeaed6db5a0c9403b1c840" kindref="member">GLFWcursorenterfun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="900" refid="group__input_1ga4687e2199c60a18a8dd1da532e6d75c9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1ga4687e2199c60a18a8dd1da532e6d75c9" kindref="member">GLFWscrollfun</ref>)(GLFWwindow*,double,double);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="917" refid="group__input_1ga0192a232a41e4e82948217c8ba94fdfd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1ga0192a232a41e4e82948217c8ba94fdfd" kindref="member">GLFWkeyfun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="group__input_1gabf24451c7ceb1952bc02b17a0d5c3e5f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1gabf24451c7ceb1952bc02b17a0d5c3e5f" kindref="member">GLFWcharfun</ref>)(GLFWwindow*,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="948" refid="group__input_1gae36fb6897d2b7df9b128900c8ce9c507" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1gae36fb6897d2b7df9b128900c8ce9c507" kindref="member">GLFWcharmodsfun</ref>)(GLFWwindow*,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="962" refid="group__input_1gab71f4ca80b651462852e601caf308c4a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__input_1gab71f4ca80b651462852e601caf308c4a" kindref="member">GLFWdropfun</ref>)(GLFWwindow*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="975" refid="group__monitor_1ga8a7ee579a66720f24d656526f3e44c63" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1659df18b3b413a60a397d5a7540f3d2" kindref="member">void</ref><sp/>(*<sp/><ref refid="group__monitor_1ga8a7ee579a66720f24d656526f3e44c63" kindref="member">GLFWmonitorfun</ref>)(<ref refid="group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3" kindref="member">GLFWmonitor</ref>*,<ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="struct_g_l_f_wvidmode" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref></highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987" refid="struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="990" refid="struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="993" refid="struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b" kindref="member">redBits</ref>;</highlight></codeline>
<codeline lineno="996" refid="struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa" kindref="member">greenBits</ref>;</highlight></codeline>
<codeline lineno="999" refid="struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047" kindref="member">blueBits</ref>;</highlight></codeline>
<codeline lineno="1002" refid="struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649" kindref="member">refreshRate</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}<sp/><ref refid="group__monitor_1gae48aadf4ea0967e6605c8f58fa5daccb" kindref="member">GLFWvidmode</ref>;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013" refid="struct_g_l_f_wgammaramp" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref></highlight></codeline>
<codeline lineno="1014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017" refid="struct_g_l_f_wgammaramp_1a2cce5d968734b685623eef913e635138" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wgammaramp_1a2cce5d968734b685623eef913e635138" kindref="member">red</ref>;</highlight></codeline>
<codeline lineno="1020" refid="struct_g_l_f_wgammaramp_1affccc6f5df47820b6562d709da3a5a3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wgammaramp_1affccc6f5df47820b6562d709da3a5a3a" kindref="member">green</ref>;</highlight></codeline>
<codeline lineno="1023" refid="struct_g_l_f_wgammaramp_1acf0c836d0efe29c392fe8d1a1042744b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wgammaramp_1acf0c836d0efe29c392fe8d1a1042744b" kindref="member">blue</ref>;</highlight></codeline>
<codeline lineno="1026" refid="struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}<sp/><ref refid="group__monitor_1gaec0bd37af673be8813592849f13e02f0" kindref="member">GLFWgammaramp</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031" refid="struct_g_l_f_wimage" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref></highlight></codeline>
<codeline lineno="1032"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035" refid="struct_g_l_f_wimage_1af6a71cc999fe6d3aea31dd7e9687d835" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wimage_1af6a71cc999fe6d3aea31dd7e9687d835" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="1038" refid="struct_g_l_f_wimage_1a0b7d95368f0c80d5e5c9875057c7dbec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wimage_1a0b7d95368f0c80d5e5c9875057c7dbec" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="1041" refid="struct_g_l_f_wimage_1a0c532a5c2bb715555279b7817daba0fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_g_l_f_wimage_1a0c532a5c2bb715555279b7817daba0fb" kindref="member">pixels</ref>;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}<sp/><ref refid="glfw3_8h_1ac81c32f4437de7b3aa58ab62c3d9e5b1" kindref="member">GLFWimage</ref>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/>*<sp/>GLFW<sp/>API<sp/>functions</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__init_1gab41771f0215a2e0afb4cf1cf98082d40" kindref="member">glfwInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__init_1gafd90e6fd4819ea9e22e5e739519a6504" kindref="member">glfwTerminate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__init_1ga2402c7824ac0194c13722790ff9559ff" kindref="member">glfwGetVersion</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>major,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>minor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rev);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__init_1ga4b9092ac5eace57d94d3cd551d6b8ded" kindref="member">glfwGetVersionString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__init_1ga6b8a2639706d5c409fc1287e8f55e928" kindref="member">GLFWerrorfun</ref><sp/><ref refid="group__init_1ga5919096b958c47102126061fb5a6f9c3" kindref="member">glfwSetErrorCallback</ref>(<ref refid="group__init_1ga6b8a2639706d5c409fc1287e8f55e928" kindref="member">GLFWerrorfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/>GLFWmonitor**<sp/><ref refid="group__monitor_1gab4d483284c57e28837bc2cd9639e9665" kindref="member">glfwGetMonitors</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/>GLFWmonitor*<sp/><ref refid="group__monitor_1ga59ea49f377fe701dd76764183e64d9f4" kindref="member">glfwGetPrimaryMonitor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1ga45b5481a614ad7beb2aade9746d07563" kindref="member">glfwGetMonitorPos</ref>(GLFWmonitor*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ypos);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1gad0e93a9e42b32394369cabbbdc1ab702" kindref="member">glfwGetMonitorPhysicalSize</ref>(GLFWmonitor*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>widthMM,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>heightMM);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__monitor_1ga22f62011bae33ea8d2974eff5d14f9b8" kindref="member">glfwGetMonitorName</ref>(GLFWmonitor*<sp/>monitor);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__monitor_1ga8a7ee579a66720f24d656526f3e44c63" kindref="member">GLFWmonitorfun</ref><sp/><ref refid="group__monitor_1gacfa9978e57c73670577d530df23bf275" kindref="member">glfwSetMonitorCallback</ref>(<ref refid="group__monitor_1ga8a7ee579a66720f24d656526f3e44c63" kindref="member">GLFWmonitorfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/><ref refid="group__monitor_1ga811c28d61595e630774389985947c665" kindref="member">glfwGetVideoModes</ref>(GLFWmonitor*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wvidmode" kindref="compound">GLFWvidmode</ref>*<sp/><ref refid="group__monitor_1gac234b63ec525c70d7e18ac84aca088c6" kindref="member">glfwGetVideoMode</ref>(GLFWmonitor*<sp/>monitor);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1ga3e4ab484476c935b4cd0bf49a5c429d6" kindref="member">glfwSetGamma</ref>(GLFWmonitor*<sp/>monitor,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref>*<sp/><ref refid="group__monitor_1gaeeac9198f3c91b83440eed679441f76b" kindref="member">glfwGetGammaRamp</ref>(GLFWmonitor*<sp/>monitor);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558" kindref="member">glfwSetGammaRamp</ref>(GLFWmonitor*<sp/>monitor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wgammaramp" kindref="compound">GLFWgammaramp</ref>*<sp/>ramp);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4" kindref="member">glfwDefaultWindowHints</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gab6e60483d79175b868d6d4dc1dcc63e2" kindref="member">glfwWindowHint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa43eab0fe80422366a4602998d53b133" kindref="member">target</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hint);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/>GLFWwindow*<sp/><ref refid="group__window_1ga680a02abe0e4494b6759d5703240713e" kindref="member">glfwCreateWindow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa105b18f96e6bc2485cb7f576a7fb9ba" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa214bd63e12f7ddf524c83894fcc69a7" kindref="member">height</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title,<sp/>GLFWmonitor*<sp/>monitor,<sp/>GLFWwindow*<sp/>share);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga806747476b7247d292be3711c323ea10" kindref="member">glfwDestroyWindow</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaa6162f67dfa38b8beda2fea623649332" kindref="member">glfwWindowShouldClose</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1cadeda7a1e2f224e06a8415d30741aa" kindref="member">glfwSetWindowShouldClose</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6a4f8a1a444e9080b297963b3db29fe0" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga861ed3414ab8120e2f74151a666ed1dc" kindref="member">glfwSetWindowTitle</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga0076a8591ef7494d359730cf2250b45b" kindref="member">glfwGetWindowPos</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ypos);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0" kindref="member">glfwSetWindowPos</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e" kindref="member">glfwGetWindowSize</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1aa105b18f96e6bc2485cb7f576a7fb9ba" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1aa214bd63e12f7ddf524c83894fcc69a7" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gae54d1f4915ded15e267ddd3f41496cd2" kindref="member">glfwSetWindowSize</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa105b18f96e6bc2485cb7f576a7fb9ba" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1aa214bd63e12f7ddf524c83894fcc69a7" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e" kindref="member">glfwGetFramebufferSize</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1aa105b18f96e6bc2485cb7f576a7fb9ba" kindref="member">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1aa214bd63e12f7ddf524c83894fcc69a7" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaad46cdaae2eb732f68d3a1499a7c5409" kindref="member">glfwGetWindowFrameSize</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a6358510bdde486b81c7951ee5c470ee4" kindref="member">left</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a2d9dcbd99961f3384f2c4d57014e0c38" kindref="member">top</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a18826d74cd7b4e758c25b4ba66e20be2" kindref="member">right</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a111675ec0799cd2ffecf18fd6c4ba449" kindref="member">bottom</ref>);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3" kindref="member">glfwIconifyWindow</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1e29caf0b819f578b04db52fff17256c" kindref="member">glfwRestoreWindow</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga7945bcdff9e5e058cf36505d6873ed8c" kindref="member">glfwShowWindow</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gaa17e287d521544bdeceafa09ac036e20" kindref="member">glfwHideWindow</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/>GLFWmonitor*<sp/><ref refid="group__window_1gaf1525cb3bccd5789c702cc9676ef3403" kindref="member">glfwGetWindowMonitor</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga1bb0c7e100418e284dbb800789c63d40" kindref="member">glfwGetWindowAttrib</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attrib);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gacc9e68faee3c1763b54cd9bc405cf43e" kindref="member">glfwSetWindowUserPointer</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1ae4ec13b07602b85e317515a2601533da" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__window_1ga0a9ff3b4bf8589e9518e8816d06a8f50" kindref="member">glfwGetWindowUserPointer</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__window_1gafd8db81fdb0e850549dc6bace5ed697a" kindref="member">GLFWwindowposfun</ref><sp/><ref refid="group__window_1gaea610899c4cb070dcd655c6de1fe1d2c" kindref="member">glfwSetWindowPosCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__window_1gafd8db81fdb0e850549dc6bace5ed697a" kindref="member">GLFWwindowposfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__window_1gae49ee6ebc03fa2da024b89943a331355" kindref="member">GLFWwindowsizefun</ref><sp/><ref refid="group__window_1ga150dad5f364425916c5816074cffa5e7" kindref="member">glfwSetWindowSizeCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__window_1gae49ee6ebc03fa2da024b89943a331355" kindref="member">GLFWwindowsizefun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__window_1ga93e7c2555bd837f4ed8b20f76cada72e" kindref="member">GLFWwindowclosefun</ref><sp/><ref refid="group__window_1ga5b827da350141c789acd64f5c4f7a0e1" kindref="member">glfwSetWindowCloseCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__window_1ga93e7c2555bd837f4ed8b20f76cada72e" kindref="member">GLFWwindowclosefun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__window_1ga7a56f9e0227e2cd9470d80d919032e08" kindref="member">GLFWwindowrefreshfun</ref><sp/><ref refid="group__window_1ga9d2621fbc271a0cdc0ce91f9749f46e3" kindref="member">glfwSetWindowRefreshCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__window_1ga7a56f9e0227e2cd9470d80d919032e08" kindref="member">GLFWwindowrefreshfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__window_1ga58be2061828dd35080bb438405d3a7e2" kindref="member">GLFWwindowfocusfun</ref><sp/><ref refid="group__window_1gac89c6534ba7fbab6f6c68b855656c0d4" kindref="member">glfwSetWindowFocusCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__window_1ga58be2061828dd35080bb438405d3a7e2" kindref="member">GLFWwindowfocusfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__window_1gad2d4e4c3d28b1242e742e8268b9528af" kindref="member">GLFWwindowiconifyfun</ref><sp/><ref refid="group__window_1ga17cd86946117b56c76397530900519db" kindref="member">glfwSetWindowIconifyCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__window_1gad2d4e4c3d28b1242e742e8268b9528af" kindref="member">GLFWwindowiconifyfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__window_1ga3e218ef9ff826129c55a7d5f6971a285" kindref="member">GLFWframebuffersizefun</ref><sp/><ref refid="group__window_1gad766bcdb4465f9c6c62e5d8ca7cfba56" kindref="member">glfwSetFramebufferSizeCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__window_1ga3e218ef9ff826129c55a7d5f6971a285" kindref="member">GLFWframebuffersizefun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga872d16e4c77f58c0436f356255920cfc" kindref="member">glfwPollEvents</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1ga6e042d05823c11e11c7339b81a237738" kindref="member">glfwWaitEvents</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gad6f6b997278c91c43b35970eb9713d7e" kindref="member">glfwPostEmptyEvent</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga1248dd5b1e566b2817e71547564d6af9" kindref="member">glfwGetInputMode</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gae1eb729d2dd91dc33fd60e150a6e1684" kindref="member">glfwSetInputMode</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glew_8h_1a6a4f8a1a444e9080b297963b3db29fe0" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga7d8ad8ffaf272808f04e1d5d33ec8859" kindref="member">glfwGetKey</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga6da5efb04f700c312a57a169fa9393a0" kindref="member">glfwGetMouseButton</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button);</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gad289438eb7cf53d11eca685373f44105" kindref="member">glfwGetCursorPos</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xpos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ypos);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gaaf152cc93418acb0ba342e3f4af922bc" kindref="member">glfwSetCursorPos</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ypos);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/><ref refid="group__input_1gac0f0f691f2d110f9acfb4bfe07f1216c" kindref="member">glfwCreateCursor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_l_f_wimage" kindref="compound">GLFWimage</ref>*<sp/><ref refid="glew_8h_1afee73cc3a067f1a92ff8b87391c73cb2" kindref="member">image</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xhot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yhot);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/><ref refid="group__input_1ga969dd87ad2ddbf3e1086cc40f235eed1" kindref="member">glfwCreateStandardCursor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga27556b7122117bc1bbb4bb3cc003ea43" kindref="member">glfwDestroyCursor</ref>(<ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/>cursor);</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1gafaf103cea2f43530cff7de4e01126a4f" kindref="member">glfwSetCursor</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="glfw3_8h_1a89261ae18c75e863aaf2656ecdd238f4" kindref="member">GLFWcursor</ref>*<sp/>cursor);</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1ga0192a232a41e4e82948217c8ba94fdfd" kindref="member">GLFWkeyfun</ref><sp/><ref refid="group__input_1gaa73bb92f628a2a0be9c132d56f19362c" kindref="member">glfwSetKeyCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1ga0192a232a41e4e82948217c8ba94fdfd" kindref="member">GLFWkeyfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1gabf24451c7ceb1952bc02b17a0d5c3e5f" kindref="member">GLFWcharfun</ref><sp/><ref refid="group__input_1ga07b2959b23dc3e466ce7475746021002" kindref="member">glfwSetCharCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1gabf24451c7ceb1952bc02b17a0d5c3e5f" kindref="member">GLFWcharfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1gae36fb6897d2b7df9b128900c8ce9c507" kindref="member">GLFWcharmodsfun</ref><sp/><ref refid="group__input_1gae6eee0bda7429bfe8028615847cf6795" kindref="member">glfwSetCharModsCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1gae36fb6897d2b7df9b128900c8ce9c507" kindref="member">GLFWcharmodsfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1ga39893a4a7e7c3239c98d29c9e084350c" kindref="member">GLFWmousebuttonfun</ref><sp/><ref refid="group__input_1ga20e5ba1ce4e086aedd48a06dc311c95f" kindref="member">glfwSetMouseButtonCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1ga39893a4a7e7c3239c98d29c9e084350c" kindref="member">GLFWmousebuttonfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1ga4cfad918fa836f09541e7b9acd36686c" kindref="member">GLFWcursorposfun</ref><sp/><ref refid="group__input_1ga9c49c0d3d3c775c3124726f1d902124d" kindref="member">glfwSetCursorPosCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1ga4cfad918fa836f09541e7b9acd36686c" kindref="member">GLFWcursorposfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1ga51ab436c41eeaed6db5a0c9403b1c840" kindref="member">GLFWcursorenterfun</ref><sp/><ref refid="group__input_1gaa20014985561efeb2c53f1956f727830" kindref="member">glfwSetCursorEnterCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1ga51ab436c41eeaed6db5a0c9403b1c840" kindref="member">GLFWcursorenterfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1ga4687e2199c60a18a8dd1da532e6d75c9" kindref="member">GLFWscrollfun</ref><sp/><ref refid="group__input_1ga29011514e93368712a3063a28707ced3" kindref="member">glfwSetScrollCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1ga4687e2199c60a18a8dd1da532e6d75c9" kindref="member">GLFWscrollfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__input_1gab71f4ca80b651462852e601caf308c4a" kindref="member">GLFWdropfun</ref><sp/><ref refid="group__input_1gad4fc40df63a5d0441ab06de9a585cc04" kindref="member">glfwSetDropCallback</ref>(GLFWwindow*<sp/>window,<sp/><ref refid="group__input_1gab71f4ca80b651462852e601caf308c4a" kindref="member">GLFWdropfun</ref><sp/>cbfun);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga7f81f22f355f4b7d315caf73cdfd9906" kindref="member">glfwJoystickPresent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joy);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="group__input_1gaab9e573d808b088c5079c0f577d39448" kindref="member">glfwGetJoystickAxes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga3951bea72b5fb4870b1aa0e5c2e9c903" kindref="member">glfwGetJoystickButtons</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="glew_8h_1a10b284d589000663becfbc6867a3a9f7" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1gac50a4fd9b01886cf9fa2c45f19191fb8" kindref="member">glfwGetJoystickName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joy);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga7a580309bbc185a0459c3559021d2fd7" kindref="member">glfwSetClipboardString</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__input_1ga3ac90c8bbaf0b46063bb02b574f3b6f7" kindref="member">glfwGetClipboardString</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga03d4a1039b8662c71eeb40beea8cb622" kindref="member">glfwGetTime</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__input_1ga94360a3628a09f32708f83cc3fa48590" kindref="member">glfwSetTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/>GLFWwindow*<sp/><ref refid="group__context_1gac28d98c655377d81a516bf5ef90780c8" kindref="member">glfwGetCurrentContext</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>(GLFWwindow*<sp/>window);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__context_1ga12a595c06947cec4967c6e1f14210a8a" kindref="member">glfwSwapInterval</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interval);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension);</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref><sp/><ref refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" kindref="member">GLFWglproc</ref><sp/><ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>procname);</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="3317"><highlight class="comment"><sp/>*<sp/>Global<sp/>definition<sp/>cleanup</highlight></codeline>
<codeline lineno="3318"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------<sp/>BEGIN<sp/>SYSTEM/COMPILER<sp/>SPECIFIC<sp/>--------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLFW_WINGDIAPI_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>WINGDIAPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>GLFW_WINGDIAPI_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLFW_CALLBACK_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>CALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#undef<sp/>GLFW_CALLBACK_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------<sp/>END<sp/>SYSTEM/COMPILER<sp/>SPECIFIC<sp/>---------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_glfw3_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h"/>
  </compounddef>
</doxygen>

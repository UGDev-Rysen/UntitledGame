<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="group__context" kind="group">
    <compoundname>context</compoundname>
    <title>Context handling</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" prot="public" static="no">
        <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref>(*</type>
        <definition>typedef void(* GLFWglproc) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>GLFWglproc</name>
        <briefdescription>
<para>Client API function pointer type. </para>        </briefdescription>
        <detaileddescription>
<para>Generic function pointer used for returning client API function pointers without forcing a cast from a regular pointer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="706" column="1" bodyfile="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__context_1gafd76c93e15ec8b0b90506a9936a46185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwMakeContextCurrent</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>glfwMakeContextCurrent</name>
        <param>
          <type><ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Makes the context of the specified window current for the calling thread. </para>        </briefdescription>
        <detaileddescription>
<para>This function makes the OpenGL or OpenGL ES context of the specified window current on the calling thread. A context can only be made current on a single thread at a time and each thread can have only a single current context at a time.</para><para>By default, making a context non-current implicitly forces a pipeline flush. On machines that support <computeroutput>GL_KHR_context_flush_control</computeroutput>, you can control whether a context performs this flush by setting the GLFW_CONTEXT_RELEASE_BEHAVIOR window hint.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose context to make current, or <computeroutput>NULL</computeroutput> to detach the current context.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_current </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gac28d98c655377d81a516bf5ef90780c8" kindref="member">glfwGetCurrentContext</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1gac28d98c655377d81a516bf5ef90780c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__window_1ga3c96d80d363e67d13a41b5d1821f3242" kindref="member">GLFWwindow</ref> *</type>
        <definition>GLFWAPI GLFWwindow* glfwGetCurrentContext</definition>
        <argsstring>(void)</argsstring>
        <name>glfwGetCurrentContext</name>
        <param>
          <type><ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Returns the window whose context is current on the calling thread. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the window whose OpenGL or OpenGL ES context is current on the calling thread.</para><para><simplesect kind="return"><para>The window whose context is current, or <computeroutput>NULL</computeroutput> if no window&apos;s context is current.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_current </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1gafd76c93e15ec8b0b90506a9936a46185" kindref="member">glfwMakeContextCurrent</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 3.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga12a595c06947cec4967c6e1f14210a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1aeea6e3dfae3acf232096f57d2d57f084" kindref="member">void</ref></type>
        <definition>GLFWAPI void glfwSwapInterval</definition>
        <argsstring>(int interval)</argsstring>
        <name>glfwSwapInterval</name>
        <param>
          <type><ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>Sets the swap interval for the current context. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the swap interval for the current context, i.e. the number of screen updates to wait from the time <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref> was called before swapping the buffers and returning. This is sometimes called <emphasis>vertical synchronization</emphasis>, <emphasis>vertical retrace synchronization</emphasis> or just <emphasis>vsync</emphasis>.</para><para>Contexts that support either of the <computeroutput>WGL_EXT_swap_control_tear</computeroutput> and <computeroutput>GLX_EXT_swap_control_tear</computeroutput> extensions also accept negative swap intervals, which allow the driver to swap even if a frame arrives a little bit late. You can check for the presence of these extensions using <ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref>. For more information about swap tearing, see the extension specifications.</para><para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">interval</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum number of screen updates to wait for until the buffers are swapped by <ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This function is not called during context creation, leaving the swap interval set to whatever is the default on that platform. This is done because some swap interval extensions used by GLFW do not allow the swap interval to be reset to zero once it has been set to a non-zero value.</para></simplesect>
<simplesect kind="remark"><para>Some GPU drivers do not honor the requested swap interval, either because of a user setting that overrides the application&apos;s request or due to bugs in the driver.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>buffer_swap </para></simplesect>
<simplesect kind="see"><para><ref refid="group__window_1gafb827800eedbfcbc97b1e5408df668d7" kindref="member">glfwSwapBuffers</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="wglew_8h_1a500a82aecba06f4550f6849b8099ca21" kindref="member">int</ref></type>
        <definition>GLFWAPI int glfwExtensionSupported</definition>
        <argsstring>(const char *extension)</argsstring>
        <name>glfwExtensionSupported</name>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
<para>Returns whether the specified extension is available. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns whether the specified client API extension is supported by the current OpenGL or OpenGL ES context. It searches both for OpenGL and OpenGL ES extension and platform-specific context creation API extensions.</para><para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para><para>As this functions retrieves and searches one or more extension strings each call, it is recommended that you cache its results if it is going to be used frequently. The extension strings will not change during the lifetime of a context, so there is no danger in doing this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">extension</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the extension. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>GL_TRUE</computeroutput> if the extension is available, or <computeroutput>GL_FALSE</computeroutput> otherwise.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_glext </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga0e8af175218929615c16e74938c10f2a" kindref="member">glfwGetProcAddress</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__context_1ga0e8af175218929615c16e74938c10f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47" kindref="member">GLFWAPI</ref> <ref refid="group__context_1ga3d47c2d2fbe0be9c505d0e04e91a133c" kindref="member">GLFWglproc</ref></type>
        <definition>GLFWAPI GLFWglproc glfwGetProcAddress</definition>
        <argsstring>(const char *procname)</argsstring>
        <name>glfwGetProcAddress</name>
        <param>
          <type>const char *</type>
          <declname>procname</declname>
        </param>
        <briefdescription>
<para>Returns the address of the specified function for the current context. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns the address of the specified core or extension function, if it is supported by the current context.</para><para>A context must be current on the calling thread. Calling this function without a current context will cause a <ref refid="group__errors_1gaa8290386e9528ccb9e42a3a4e16fc0d0" kindref="member">GLFW_NO_CURRENT_CONTEXT</ref> error.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">procname</parametername>
</parameternamelist>
<parameterdescription>
<para>The ASCII encoded name of the function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The address of the function, or <computeroutput>NULL</computeroutput> if the function is unavailable or an error occurred.</para></simplesect>
<simplesect kind="remark"><para>The addresses of a given function is not guaranteed to be the same between contexts.</para></simplesect>
<simplesect kind="remark"><para>This function may return a non-<computeroutput>NULL</computeroutput> address despite the associated version or extension not being available. Always check the context version or extension string presence first.</para></simplesect>
<simplesect kind="par"><title>Pointer Lifetime</title><para>The returned function pointer is valid until the context is destroyed or the library is terminated.</para></simplesect>
<simplesect kind="par"><title>Thread Safety</title><para>This function may be called from any thread.</para></simplesect>
<simplesect kind="see"><para>context_glext </para></simplesect>
<simplesect kind="see"><para><ref refid="group__context_1ga9a28c712d35f9e43534e1d03b051c04c" kindref="member">glfwExtensionSupported</ref></para></simplesect>
<simplesect kind="since"><para>Added in GLFW 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/Libraries/VSProjects/UntitledEngine/Dependencies/include/glfw3.h" line="3313" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is the reference documentation for context related functions. For more information, see the <ref refid="group__context" kindref="compound">Context handling</ref>. </para>    </detaileddescription>
  </compounddef>
</doxygen>
